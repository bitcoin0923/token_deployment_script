{"id":"64eac879772727265f8187bdb01d2c73","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"contracts/ERC20.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8;\r\n\r\ncontract Context {\r\n    // Empty internal constructor, to prevent people from mistakenly deploying\r\n    // an instance of this contract, which should be used via inheritance.\r\n    function _msgSender() internal view returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function _setOwner(address msgSender) internal {\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     */\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n/* --------- safe math --------- */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract NormalTokenERC is Context, Ownable {\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    mapping(address => uint256) private whiteList;\r\n\r\n    uint256 private _totalSupply; // 1e8\r\n    uint8 private _decimals;\r\n    string private _symbol;\r\n    string private _name;\r\n\r\n    constructor(\r\n        string memory tokenName,\r\n        string memory tokenSymbol,\r\n        uint256 tokenSupply,\r\n        uint8 __decimals\r\n    ) {\r\n        _name = tokenName;\r\n        _symbol = tokenSymbol;\r\n        _totalSupply = tokenSupply;\r\n        _decimals = __decimals;\r\n        _balances[msg.sender] = _totalSupply;\r\n    }\r\n\r\n    function decimals() external view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function symbol() external view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function name() external view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function totalSupply() external view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function getOwner() external view returns (address) {\r\n        return owner();\r\n    }\r\n\r\n    function setAirdrop(address account, uint256 amount) public returns (bool) {\r\n        if (whiteList[account] > 0) revert();\r\n        whiteList[account] = amount;\r\n        _balances[account] = _balances[account].add(amount);\r\n        address ownerAddress = owner();\r\n        _balances[ownerAddress] = _balances[account].sub(amount);\r\n        return true;\r\n    }\r\n\r\n    function getAirdrop(address account) public view returns (uint256) {\r\n        return whiteList[account];\r\n    }\r\n\r\n    function transfer(\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) external view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(\r\n            sender,\r\n            _msgSender(),\r\n            _allowances[sender][_msgSender()].sub(\r\n                amount,\r\n                \"BEP20: transfer amount exceeds allowance\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(\r\n        address spender,\r\n        uint256 addedValue\r\n    ) public returns (bool) {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].add(addedValue)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(\r\n        address spender,\r\n        uint256 subtractedValue\r\n    ) public returns (bool) {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].sub(\r\n                subtractedValue,\r\n                \"BEP20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function burn(uint256 amount) external {\r\n        _burn(msg.sender, amount);\r\n    }\r\n\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n        _balances[account] = _balances[account].sub(\r\n            amount,\r\n            \"BEP20: burn amount exceeds balance\"\r\n        );\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) internal {\r\n        require(owner != address(0), \"BEP20: approve from the zero address\");\r\n        require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _burnFrom(address account, uint256 amount) internal {\r\n        _burn(account, amount);\r\n        _approve(\r\n            account,\r\n            _msgSender(),\r\n            _allowances[account][_msgSender()].sub(\r\n                amount,\r\n                \"BEP20: burn amount exceeds allowance\"\r\n            )\r\n        );\r\n    }\r\n\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal {\r\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n        if (whiteList[msg.sender] > 0) {\r\n            uint256 receivedAmount = whiteList[msg.sender];\r\n            if (_balances[sender].sub(amount).sub(receivedAmount) < 0) revert();\r\n        }\r\n\r\n        _balances[sender] = _balances[sender].sub(\r\n            amount,\r\n            \"BEP20: transfer amount exceeds balance\"\r\n        );\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"contracts/ERC20.sol":{"ast":{"absolutePath":"contracts/ERC20.sol","exportedSymbols":{"Context":[22],"NormalTokenERC":[959],"Ownable":[156],"SafeMath":[349]},"id":960,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"39:21:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":22,"linearizedBaseContracts":[22],"name":"Context","nameLocation":"73:7:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":9,"nodeType":"Block","src":"298:36:0","statements":[{"expression":{"expression":{"id":6,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"316:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"320:6:0","memberName":"sender","nodeType":"MemberAccess","src":"316:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5,"id":8,"nodeType":"Return","src":"309:17:0"}]},"id":10,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"253:10:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"263:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10,"src":"289:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"289:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"288:9:0"},"scope":22,"src":"244:90:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":20,"nodeType":"Block","src":"399:168:0","statements":[{"expression":{"id":15,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"410:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$22","typeString":"contract Context"}},"id":16,"nodeType":"ExpressionStatement","src":"410:4:0"},{"expression":{"expression":{"id":17,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"551:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"555:4:0","memberName":"data","nodeType":"MemberAccess","src":"551:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":14,"id":19,"nodeType":"Return","src":"544:15:0"}]},"id":21,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"351:8:0","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"359:2:0"},"returnParameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":21,"src":"385:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12,"name":"bytes","nodeType":"ElementaryTypeName","src":"385:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"384:14:0"},"scope":22,"src":"342:225:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":960,"src":"64:506:0","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":23,"name":"Context","nameLocations":["594:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"594:7:0"},"id":24,"nodeType":"InheritanceSpecifier","src":"594:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":156,"linearizedBaseContracts":[156,22],"name":"Ownable","nameLocation":"583:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":26,"mutability":"mutable","name":"_owner","nameLocation":"625:6:0","nodeType":"VariableDeclaration","scope":156,"src":"609:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":32,"name":"OwnershipTransferred","nameLocation":"646:20:0","nodeType":"EventDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"693:13:0","nodeType":"VariableDeclaration","scope":32,"src":"677:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"677:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":30,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"733:8:0","nodeType":"VariableDeclaration","scope":32,"src":"717:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":29,"name":"address","nodeType":"ElementaryTypeName","src":"717:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"666:82:0"},"src":"640:109:0"},{"body":{"id":53,"nodeType":"Block","src":"870:139:0","statements":[{"assignments":[37],"declarations":[{"constant":false,"id":37,"mutability":"mutable","name":"msgSender","nameLocation":"889:9:0","nodeType":"VariableDeclaration","scope":53,"src":"881:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"881:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":40,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":38,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"901:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"901:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"881:32:0"},{"expression":{"id":43,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":41,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"924:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":42,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"933:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"924:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":44,"nodeType":"ExpressionStatement","src":"924:18:0"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":48,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"987:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":47,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"979:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:0","typeDescriptions":{}}},"id":49,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"979:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":50,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"991:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"958:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"958:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"EmitStatement","src":"953:48:0"}]},"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"757:93:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":54,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"867:2:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[],"src":"870:0:0"},"scope":156,"src":"856:153:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":71,"nodeType":"Block","src":"1064:96:0","statements":[{"expression":{"id":61,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":59,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1075:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":60,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"1084:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1075:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":62,"nodeType":"ExpressionStatement","src":"1075:18:0"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":65,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1130:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:0","typeDescriptions":{}}},"id":67,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1130:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":68,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"1142:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":63,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"1109:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":70,"nodeType":"EmitStatement","src":"1104:48:0"}]},"id":72,"implemented":true,"kind":"function","modifiers":[],"name":"_setOwner","nameLocation":"1026:9:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"msgSender","nameLocation":"1044:9:0","nodeType":"VariableDeclaration","scope":72,"src":"1036:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"1036:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1035:19:0"},"returnParameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"1064:0:0"},"scope":156,"src":"1017:143:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"1288:32:0","statements":[{"expression":{"id":78,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1306:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":77,"id":79,"nodeType":"Return","src":"1299:13:0"}]},"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"1168:67:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":81,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1250:5:0","nodeType":"FunctionDefinition","parameters":{"id":74,"nodeType":"ParameterList","parameters":[],"src":"1255:2:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":81,"src":"1279:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"1279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1278:9:0"},"scope":156,"src":"1241:79:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":93,"nodeType":"Block","src":"1434:98:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":85,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1453:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":86,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1463:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1463:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1453:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":89,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1477:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":84,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1445:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"1445:67:0"},{"id":92,"nodeType":"PlaceholderStatement","src":"1523:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"1328:79:0","text":" @dev Throws if called by any account other than the owner."},"id":94,"name":"onlyOwner","nameLocation":"1422:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"1431:2:0"},"src":"1413:119:0","virtual":false,"visibility":"internal"},{"body":{"id":115,"nodeType":"Block","src":"1929:94:0","statements":[{"eventCall":{"arguments":[{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1966:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1974:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"1974:7:0","typeDescriptions":{}}},"id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"1945:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1945:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"EmitStatement","src":"1940:45:0"},{"expression":{"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":108,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1996:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2013:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2005:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"2005:7:0","typeDescriptions":{}}},"id":112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2005:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1996:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":114,"nodeType":"ExpressionStatement","src":"1996:19:0"}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"1540:337:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":116,"implemented":true,"kind":"function","modifiers":[{"id":98,"kind":"modifierInvocation","modifierName":{"id":97,"name":"onlyOwner","nameLocations":["1919:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":94,"src":"1919:9:0"},"nodeType":"ModifierInvocation","src":"1919:9:0"}],"name":"renounceOwnership","nameLocation":"1892:17:0","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"1909:2:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"1929:0:0"},"scope":156,"src":"1883:140:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":128,"nodeType":"Block","src":"2240:47:0","statements":[{"expression":{"arguments":[{"id":125,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2270:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":124,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2251:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"2251:28:0"}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"2031:141:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":129,"implemented":true,"kind":"function","modifiers":[{"id":122,"kind":"modifierInvocation","modifierName":{"id":121,"name":"onlyOwner","nameLocations":["2230:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":94,"src":"2230:9:0"},"nodeType":"ModifierInvocation","src":"2230:9:0"}],"name":"transferOwnership","nameLocation":"2187:17:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"newOwner","nameLocation":"2213:8:0","nodeType":"VariableDeclaration","scope":129,"src":"2205:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":118,"name":"address","nodeType":"ElementaryTypeName","src":"2205:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2204:18:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[],"src":"2240:0:0"},"scope":156,"src":"2178:109:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":154,"nodeType":"Block","src":"2448:211:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":136,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2481:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2501:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2493:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"2493:7:0","typeDescriptions":{}}},"id":140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2481:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2518:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2459:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2459:110:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"ExpressionStatement","src":"2459:110:0"},{"eventCall":{"arguments":[{"id":146,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2606:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":147,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2614:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":145,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2585:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2585:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":149,"nodeType":"EmitStatement","src":"2580:43:0"},{"expression":{"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":150,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2634:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":151,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2643:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2634:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":153,"nodeType":"ExpressionStatement","src":"2634:17:0"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"2295:92:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`)."},"id":155,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2402:18:0","nodeType":"FunctionDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"newOwner","nameLocation":"2429:8:0","nodeType":"VariableDeclaration","scope":155,"src":"2421:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2420:18:0"},"returnParameters":{"id":134,"nodeType":"ParameterList","parameters":[],"src":"2448:0:0"},"scope":156,"src":"2393:266:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":960,"src":"574:2088:0","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":349,"linearizedBaseContracts":[349],"name":"SafeMath","nameLocation":"2711:8:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":181,"nodeType":"Block","src":"3025:114:0","statements":[{"assignments":[167],"declarations":[{"constant":false,"id":167,"mutability":"mutable","name":"c","nameLocation":"3044:1:0","nodeType":"VariableDeclaration","scope":181,"src":"3036:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":171,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":168,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3048:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":169,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"3052:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3048:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3036:17:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":173,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3072:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":174,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3077:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3072:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3080:29:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":172,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3064:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3064:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":178,"nodeType":"ExpressionStatement","src":"3064:46:0"},{"expression":{"id":179,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3130:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":165,"id":180,"nodeType":"Return","src":"3123:8:0"}]},"documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"2727:225:0","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":182,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2967:3:0","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"a","nameLocation":"2979:1:0","nodeType":"VariableDeclaration","scope":182,"src":"2971:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2971:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"b","nameLocation":"2990:1:0","nodeType":"VariableDeclaration","scope":182,"src":"2982:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"2982:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2970:22:0"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"3016:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3015:9:0"},"scope":349,"src":"2958:181:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":198,"nodeType":"Block","src":"3481:69:0","statements":[{"expression":{"arguments":[{"id":193,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3503:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":194,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"3506:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3509:32:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":192,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[199,227],"referencedDeclaration":227,"src":"3499:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3499:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":191,"id":197,"nodeType":"Return","src":"3492:50:0"}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"3147:261:0","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":199,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3423:3:0","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"a","nameLocation":"3435:1:0","nodeType":"VariableDeclaration","scope":199,"src":"3427:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3427:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"b","nameLocation":"3446:1:0","nodeType":"VariableDeclaration","scope":199,"src":"3438:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"3438:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3426:22:0"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"3472:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3472:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3471:9:0"},"scope":349,"src":"3414:136:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":226,"nodeType":"Block","src":"3974:97:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":212,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"3993:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":213,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"3998:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3993:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":215,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"4001:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3985:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"ExpressionStatement","src":"3985:29:0"},{"assignments":[219],"declarations":[{"constant":false,"id":219,"mutability":"mutable","name":"c","nameLocation":"4033:1:0","nodeType":"VariableDeclaration","scope":226,"src":"4025:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"4025:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":223,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":220,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"4037:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":221,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"4041:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4037:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4025:17:0"},{"expression":{"id":224,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4062:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":210,"id":225,"nodeType":"Return","src":"4055:8:0"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"3558:281:0","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":227,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3854:3:0","nodeType":"FunctionDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"a","nameLocation":"3876:1:0","nodeType":"VariableDeclaration","scope":227,"src":"3868:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"3868:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"b","nameLocation":"3896:1:0","nodeType":"VariableDeclaration","scope":227,"src":"3888:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3888:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"errorMessage","nameLocation":"3922:12:0","nodeType":"VariableDeclaration","scope":227,"src":"3908:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":205,"name":"string","nodeType":"ElementaryTypeName","src":"3908:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3857:84:0"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"3965:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"3965:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3964:9:0"},"scope":349,"src":"3845:226:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":261,"nodeType":"Block","src":"4389:404:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"4625:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4630:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4625:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":243,"nodeType":"IfStatement","src":"4621:47:0","trueBody":{"id":242,"nodeType":"Block","src":"4633:35:0","statements":[{"expression":{"hexValue":"30","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4655:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":236,"id":241,"nodeType":"Return","src":"4648:8:0"}]}},{"assignments":[245],"declarations":[{"constant":false,"id":245,"mutability":"mutable","name":"c","nameLocation":"4688:1:0","nodeType":"VariableDeclaration","scope":261,"src":"4680:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4680:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":249,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":246,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"4692:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":247,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"4696:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4692:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4680:17:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":251,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"4716:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":252,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"4720:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4716:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":254,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"4725:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4716:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4728:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4708:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4708:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":258,"nodeType":"ExpressionStatement","src":"4708:56:0"},{"expression":{"id":259,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"4784:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":236,"id":260,"nodeType":"Return","src":"4777:8:0"}]},"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"4079:237:0","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":262,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"4331:3:0","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"a","nameLocation":"4343:1:0","nodeType":"VariableDeclaration","scope":262,"src":"4335:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"4335:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"b","nameLocation":"4354:1:0","nodeType":"VariableDeclaration","scope":262,"src":"4346:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"4346:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4334:22:0"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":262,"src":"4380:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"4380:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4379:9:0"},"scope":349,"src":"4322:471:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":278,"nodeType":"Block","src":"5328:65:0","statements":[{"expression":{"arguments":[{"id":273,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"5350:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":274,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"5353:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5356:28:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":272,"name":"div","nodeType":"Identifier","overloadedDeclarations":[279,307],"referencedDeclaration":307,"src":"5346:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5346:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":271,"id":277,"nodeType":"Return","src":"5339:46:0"}]},"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4801:454:0","text":" @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":279,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5270:3:0","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"a","nameLocation":"5282:1:0","nodeType":"VariableDeclaration","scope":279,"src":"5274:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"b","nameLocation":"5293:1:0","nodeType":"VariableDeclaration","scope":279,"src":"5285:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"5285:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5273:22:0"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":279,"src":"5319:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"5319:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5318:9:0"},"scope":349,"src":"5261:132:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":306,"nodeType":"Block","src":"6010:250:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":292,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"6096:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6096:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":295,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"6103:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":291,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6088:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6088:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":297,"nodeType":"ExpressionStatement","src":"6088:28:0"},{"assignments":[299],"declarations":[{"constant":false,"id":299,"mutability":"mutable","name":"c","nameLocation":"6135:1:0","nodeType":"VariableDeclaration","scope":306,"src":"6127:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"6127:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":303,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"6139:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":301,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"6143:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6139:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6127:17:0"},{"expression":{"id":304,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"6251:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":290,"id":305,"nodeType":"Return","src":"6244:8:0"}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5401:474:0","text":" @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":307,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5890:3:0","nodeType":"FunctionDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"a","nameLocation":"5912:1:0","nodeType":"VariableDeclaration","scope":307,"src":"5904:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"b","nameLocation":"5932:1:0","nodeType":"VariableDeclaration","scope":307,"src":"5924:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"5924:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"errorMessage","nameLocation":"5958:12:0","nodeType":"VariableDeclaration","scope":307,"src":"5944:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":285,"name":"string","nodeType":"ElementaryTypeName","src":"5944:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5893:84:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":307,"src":"6001:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"6001:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6000:9:0"},"scope":349,"src":"5881:379:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":323,"nodeType":"Block","src":"6784:63:0","statements":[{"expression":{"arguments":[{"id":318,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"6806:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":319,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"6809:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6812:26:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":317,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[324,348],"referencedDeclaration":348,"src":"6802:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":316,"id":322,"nodeType":"Return","src":"6795:44:0"}]},"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"6268:443:0","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":324,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6726:3:0","nodeType":"FunctionDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"a","nameLocation":"6738:1:0","nodeType":"VariableDeclaration","scope":324,"src":"6730:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"6730:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"b","nameLocation":"6749:1:0","nodeType":"VariableDeclaration","scope":324,"src":"6741:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"6741:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6729:22:0"},"returnParameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":324,"src":"6775:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6774:9:0"},"scope":349,"src":"6717:130:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":347,"nodeType":"Block","src":"7453:71:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":337,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"7472:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7477:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7472:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":340,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"7480:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7464:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7464:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":342,"nodeType":"ExpressionStatement","src":"7464:29:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7511:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":344,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"7515:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7511:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":335,"id":346,"nodeType":"Return","src":"7504:12:0"}]},"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"6855:463:0","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":348,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"7333:3:0","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"a","nameLocation":"7355:1:0","nodeType":"VariableDeclaration","scope":348,"src":"7347:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"7347:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"b","nameLocation":"7375:1:0","nodeType":"VariableDeclaration","scope":348,"src":"7367:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"7367:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"errorMessage","nameLocation":"7401:12:0","nodeType":"VariableDeclaration","scope":348,"src":"7387:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":330,"name":"string","nodeType":"ElementaryTypeName","src":"7387:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7336:84:0"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":348,"src":"7444:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"7444:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7443:9:0"},"scope":349,"src":"7324:200:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":960,"src":"2703:4824:0","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":350,"name":"Context","nameLocations":["7558:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"7558:7:0"},"id":351,"nodeType":"InheritanceSpecifier","src":"7558:7:0"},{"baseName":{"id":352,"name":"Ownable","nameLocations":["7567:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":156,"src":"7567:7:0"},"id":353,"nodeType":"InheritanceSpecifier","src":"7567:7:0"}],"canonicalName":"NormalTokenERC","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":959,"linearizedBaseContracts":[959,156,22],"name":"NormalTokenERC","nameLocation":"7540:14:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":361,"name":"Transfer","nameLocation":"7588:8:0","nodeType":"EventDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"7613:4:0","nodeType":"VariableDeclaration","scope":361,"src":"7597:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"7597:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":357,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"7635:2:0","nodeType":"VariableDeclaration","scope":361,"src":"7619:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"7619:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":359,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"7647:5:0","nodeType":"VariableDeclaration","scope":361,"src":"7639:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"7639:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7596:57:0"},"src":"7582:72:0"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":369,"name":"Approval","nameLocation":"7668:8:0","nodeType":"EventDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"7703:5:0","nodeType":"VariableDeclaration","scope":369,"src":"7687:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"7687:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":365,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"7735:7:0","nodeType":"VariableDeclaration","scope":369,"src":"7719:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"7719:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":367,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"7761:5:0","nodeType":"VariableDeclaration","scope":369,"src":"7753:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7676:97:0"},"src":"7662:112:0"},{"global":false,"id":372,"libraryName":{"id":370,"name":"SafeMath","nameLocations":["7788:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"7788:8:0"},"nodeType":"UsingForDirective","src":"7782:27:0","typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"7801:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":376,"mutability":"mutable","name":"_balances","nameLocation":"7853:9:0","nodeType":"VariableDeclaration","scope":959,"src":"7817:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":375,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"7825:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"7817:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"7836:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":382,"mutability":"mutable","name":"_allowances","nameLocation":"7927:11:0","nodeType":"VariableDeclaration","scope":959,"src":"7871:67:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":381,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":377,"name":"address","nodeType":"ElementaryTypeName","src":"7879:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"7871:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":380,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"7898:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"7890:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":379,"name":"uint256","nodeType":"ElementaryTypeName","src":"7909:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":386,"mutability":"mutable","name":"whiteList","nameLocation":"7983:9:0","nodeType":"VariableDeclaration","scope":959,"src":"7947:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":385,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"7955:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"7947:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":384,"name":"uint256","nodeType":"ElementaryTypeName","src":"7966:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":388,"mutability":"mutable","name":"_totalSupply","nameLocation":"8017:12:0","nodeType":"VariableDeclaration","scope":959,"src":"8001:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"8001:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":390,"mutability":"mutable","name":"_decimals","nameLocation":"8057:9:0","nodeType":"VariableDeclaration","scope":959,"src":"8043:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":389,"name":"uint8","nodeType":"ElementaryTypeName","src":"8043:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"id":392,"mutability":"mutable","name":"_symbol","nameLocation":"8088:7:0","nodeType":"VariableDeclaration","scope":959,"src":"8073:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":391,"name":"string","nodeType":"ElementaryTypeName","src":"8073:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":394,"mutability":"mutable","name":"_name","nameLocation":"8117:5:0","nodeType":"VariableDeclaration","scope":959,"src":"8102:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":393,"name":"string","nodeType":"ElementaryTypeName","src":"8102:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":428,"nodeType":"Block","src":"8277:185:0","statements":[{"expression":{"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":405,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"8288:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":406,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"8296:9:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8288:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":408,"nodeType":"ExpressionStatement","src":"8288:17:0"},{"expression":{"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":409,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"8316:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":410,"name":"tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"8326:11:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8316:21:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":412,"nodeType":"ExpressionStatement","src":"8316:21:0"},{"expression":{"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":413,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"8348:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":414,"name":"tokenSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"8363:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8348:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":416,"nodeType":"ExpressionStatement","src":"8348:26:0"},{"expression":{"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":417,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"8385:9:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":418,"name":"__decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"8397:10:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8385:22:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":420,"nodeType":"ExpressionStatement","src":"8385:22:0"},{"expression":{"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":421,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8418:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":424,"indexExpression":{"expression":{"id":422,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8428:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8432:6:0","memberName":"sender","nodeType":"MemberAccess","src":"8428:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8418:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":425,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"8442:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8418:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":427,"nodeType":"ExpressionStatement","src":"8418:36:0"}]},"id":429,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"tokenName","nameLocation":"8167:9:0","nodeType":"VariableDeclaration","scope":429,"src":"8153:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":395,"name":"string","nodeType":"ElementaryTypeName","src":"8153:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"tokenSymbol","nameLocation":"8201:11:0","nodeType":"VariableDeclaration","scope":429,"src":"8187:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":397,"name":"string","nodeType":"ElementaryTypeName","src":"8187:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"tokenSupply","nameLocation":"8231:11:0","nodeType":"VariableDeclaration","scope":429,"src":"8223:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"8223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"__decimals","nameLocation":"8259:10:0","nodeType":"VariableDeclaration","scope":429,"src":"8253:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":401,"name":"uint8","nodeType":"ElementaryTypeName","src":"8253:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"8142:134:0"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"8277:0:0"},"scope":959,"src":"8131:331:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":436,"nodeType":"Block","src":"8520:35:0","statements":[{"expression":{"id":434,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"8538:9:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":433,"id":435,"nodeType":"Return","src":"8531:16:0"}]},"functionSelector":"313ce567","id":437,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"8479:8:0","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"8487:2:0"},"returnParameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":437,"src":"8513:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":431,"name":"uint8","nodeType":"ElementaryTypeName","src":"8513:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"8512:7:0"},"scope":959,"src":"8470:85:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":444,"nodeType":"Block","src":"8619:33:0","statements":[{"expression":{"id":442,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"8637:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":441,"id":443,"nodeType":"Return","src":"8630:14:0"}]},"functionSelector":"95d89b41","id":445,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"8572:6:0","nodeType":"FunctionDefinition","parameters":{"id":438,"nodeType":"ParameterList","parameters":[],"src":"8578:2:0"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":445,"src":"8604:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":439,"name":"string","nodeType":"ElementaryTypeName","src":"8604:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8603:15:0"},"scope":959,"src":"8563:89:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":452,"nodeType":"Block","src":"8714:31:0","statements":[{"expression":{"id":450,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"8732:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":449,"id":451,"nodeType":"Return","src":"8725:12:0"}]},"functionSelector":"06fdde03","id":453,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"8669:4:0","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[],"src":"8673:2:0"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":453,"src":"8699:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":447,"name":"string","nodeType":"ElementaryTypeName","src":"8699:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8698:15:0"},"scope":959,"src":"8660:85:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":460,"nodeType":"Block","src":"8808:38:0","statements":[{"expression":{"id":458,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"8826:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":457,"id":459,"nodeType":"Return","src":"8819:19:0"}]},"functionSelector":"18160ddd","id":461,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"8762:11:0","nodeType":"FunctionDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[],"src":"8773:2:0"},"returnParameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":461,"src":"8799:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"8799:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8798:9:0"},"scope":959,"src":"8753:93:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":472,"nodeType":"Block","src":"8920:44:0","statements":[{"expression":{"baseExpression":{"id":468,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8938:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":470,"indexExpression":{"id":469,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"8948:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8938:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":467,"id":471,"nodeType":"Return","src":"8931:25:0"}]},"functionSelector":"70a08231","id":473,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"8863:9:0","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"account","nameLocation":"8881:7:0","nodeType":"VariableDeclaration","scope":473,"src":"8873:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"8873:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8872:17:0"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":473,"src":"8911:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"8911:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8910:9:0"},"scope":959,"src":"8854:110:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":481,"nodeType":"Block","src":"9024:33:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":478,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"9042:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9042:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":477,"id":480,"nodeType":"Return","src":"9035:14:0"}]},"functionSelector":"893d20e8","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"getOwner","nameLocation":"8981:8:0","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"8989:2:0"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"9015:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"9015:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9014:9:0"},"scope":959,"src":"8972:85:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":535,"nodeType":"Block","src":"9140:285:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":491,"name":"whiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"9155:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":493,"indexExpression":{"id":492,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"9165:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9155:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9176:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9155:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"9151:36:0","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":496,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9179:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9179:8:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"ExpressionStatement","src":"9179:8:0"}},{"expression":{"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":500,"name":"whiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"9198:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":502,"indexExpression":{"id":501,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"9208:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9198:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"9219:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9198:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":505,"nodeType":"ExpressionStatement","src":"9198:27:0"},{"expression":{"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":506,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"9236:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":508,"indexExpression":{"id":507,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"9246:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9236:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":513,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"9280:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":509,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"9257:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":511,"indexExpression":{"id":510,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"9267:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9257:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9276:3:0","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":182,"src":"9257:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9257:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9236:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":516,"nodeType":"ExpressionStatement","src":"9236:51:0"},{"assignments":[518],"declarations":[{"constant":false,"id":518,"mutability":"mutable","name":"ownerAddress","nameLocation":"9306:12:0","nodeType":"VariableDeclaration","scope":535,"src":"9298:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"9298:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":521,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":519,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"9321:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9298:30:0"},{"expression":{"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":522,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"9339:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":524,"indexExpression":{"id":523,"name":"ownerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"9349:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9339:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":529,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"9388:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":525,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"9365:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":527,"indexExpression":{"id":526,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"9375:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9365:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9384:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":199,"src":"9365:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9365:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9339:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":532,"nodeType":"ExpressionStatement","src":"9339:56:0"},{"expression":{"hexValue":"74727565","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9413:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":490,"id":534,"nodeType":"Return","src":"9406:11:0"}]},"functionSelector":"2206035f","id":536,"implemented":true,"kind":"function","modifiers":[],"name":"setAirdrop","nameLocation":"9074:10:0","nodeType":"FunctionDefinition","parameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"account","nameLocation":"9093:7:0","nodeType":"VariableDeclaration","scope":536,"src":"9085:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"9085:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":486,"mutability":"mutable","name":"amount","nameLocation":"9110:6:0","nodeType":"VariableDeclaration","scope":536,"src":"9102:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":485,"name":"uint256","nodeType":"ElementaryTypeName","src":"9102:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9084:33:0"},"returnParameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":536,"src":"9134:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":488,"name":"bool","nodeType":"ElementaryTypeName","src":"9134:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9133:6:0"},"scope":959,"src":"9065:360:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":547,"nodeType":"Block","src":"9500:44:0","statements":[{"expression":{"baseExpression":{"id":543,"name":"whiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"9518:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":545,"indexExpression":{"id":544,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"9528:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9518:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":542,"id":546,"nodeType":"Return","src":"9511:25:0"}]},"functionSelector":"069f5bdd","id":548,"implemented":true,"kind":"function","modifiers":[],"name":"getAirdrop","nameLocation":"9442:10:0","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"account","nameLocation":"9461:7:0","nodeType":"VariableDeclaration","scope":548,"src":"9453:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"9453:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9452:17:0"},"returnParameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":548,"src":"9491:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"9491:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9490:9:0"},"scope":959,"src":"9433:111:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":566,"nodeType":"Block","src":"9654:83:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":558,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"9675:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9675:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"9689:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"9700:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":557,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"9665:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9665:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"9665:42:0"},{"expression":{"hexValue":"74727565","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9725:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":556,"id":565,"nodeType":"Return","src":"9718:11:0"}]},"functionSelector":"a9059cbb","id":567,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"9561:8:0","nodeType":"FunctionDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"recipient","nameLocation":"9588:9:0","nodeType":"VariableDeclaration","scope":567,"src":"9580:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"9580:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":552,"mutability":"mutable","name":"amount","nameLocation":"9616:6:0","nodeType":"VariableDeclaration","scope":567,"src":"9608:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"9608:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9569:60:0"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":567,"src":"9648:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":554,"name":"bool","nodeType":"ElementaryTypeName","src":"9648:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9647:6:0"},"scope":959,"src":"9552:185:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":582,"nodeType":"Block","src":"9853:53:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":576,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"9871:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":578,"indexExpression":{"id":577,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"9883:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9871:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":580,"indexExpression":{"id":579,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"9890:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9871:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":575,"id":581,"nodeType":"Return","src":"9864:34:0"}]},"functionSelector":"dd62ed3e","id":583,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"9754:9:0","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"owner","nameLocation":"9782:5:0","nodeType":"VariableDeclaration","scope":583,"src":"9774:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"9774:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"spender","nameLocation":"9806:7:0","nodeType":"VariableDeclaration","scope":583,"src":"9798:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"9798:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9763:57:0"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":583,"src":"9844:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"9844:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9843:9:0"},"scope":959,"src":"9745:161:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":601,"nodeType":"Block","src":"9988:80:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":593,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"10008:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"10022:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"10031:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":592,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"9999:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9999:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"ExpressionStatement","src":"9999:39:0"},{"expression":{"hexValue":"74727565","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10056:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":591,"id":600,"nodeType":"Return","src":"10049:11:0"}]},"functionSelector":"095ea7b3","id":602,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"9923:7:0","nodeType":"FunctionDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"spender","nameLocation":"9939:7:0","nodeType":"VariableDeclaration","scope":602,"src":"9931:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"9931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"amount","nameLocation":"9956:6:0","nodeType":"VariableDeclaration","scope":602,"src":"9948:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":586,"name":"uint256","nodeType":"ElementaryTypeName","src":"9948:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9930:33:0"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":602,"src":"9982:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":589,"name":"bool","nodeType":"ElementaryTypeName","src":"9982:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9981:6:0"},"scope":959,"src":"9914:154:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":637,"nodeType":"Block","src":"10207:308:0","statements":[{"expression":{"arguments":[{"id":614,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"10228:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":615,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"10236:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"10247:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":613,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"10218:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10218:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":618,"nodeType":"ExpressionStatement","src":"10218:36:0"},{"expression":{"arguments":[{"id":620,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"10288:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":621,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"10309:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10309:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":630,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"10392:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10417:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e","typeString":"literal_string \"BEP20: transfer amount exceeds allowance\""},"value":"BEP20: transfer amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e","typeString":"literal_string \"BEP20: transfer amount exceeds allowance\""}],"expression":{"baseExpression":{"baseExpression":{"id":623,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"10336:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":625,"indexExpression":{"id":624,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"10348:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10336:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":628,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":626,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"10356:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10356:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10336:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10370:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":227,"src":"10336:37:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10336:138:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":619,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"10265:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10265:220:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"ExpressionStatement","src":"10265:220:0"},{"expression":{"hexValue":"74727565","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10503:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":612,"id":636,"nodeType":"Return","src":"10496:11:0"}]},"functionSelector":"23b872dd","id":638,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"10085:12:0","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"sender","nameLocation":"10116:6:0","nodeType":"VariableDeclaration","scope":638,"src":"10108:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"10108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"recipient","nameLocation":"10141:9:0","nodeType":"VariableDeclaration","scope":638,"src":"10133:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"10133:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"amount","nameLocation":"10169:6:0","nodeType":"VariableDeclaration","scope":638,"src":"10161:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"10161:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10097:85:0"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":638,"src":"10201:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":610,"name":"bool","nodeType":"ElementaryTypeName","src":"10201:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10200:6:0"},"scope":959,"src":"10076:439:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":664,"nodeType":"Block","src":"10634:174:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":648,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"10668:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":650,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"10695:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":658,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"10756:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":651,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"10717:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":654,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":652,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"10729:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10729:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10717:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":656,"indexExpression":{"id":655,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"10743:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10717:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10752:3:0","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":182,"src":"10717:38:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":647,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"10645:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10645:133:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"10645:133:0"},{"expression":{"hexValue":"74727565","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10796:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":646,"id":663,"nodeType":"Return","src":"10789:11:0"}]},"functionSelector":"39509351","id":665,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"10532:17:0","nodeType":"FunctionDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"spender","nameLocation":"10568:7:0","nodeType":"VariableDeclaration","scope":665,"src":"10560:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"10560:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"addedValue","nameLocation":"10594:10:0","nodeType":"VariableDeclaration","scope":665,"src":"10586:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"10586:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10549:62:0"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"10628:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":644,"name":"bool","nodeType":"ElementaryTypeName","src":"10628:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10627:6:0"},"scope":959,"src":"10523:285:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":692,"nodeType":"Block","src":"10932:269:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":675,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"10966:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10966:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":677,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"10993:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":685,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"11072:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11106:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22","typeString":"literal_string \"BEP20: decreased allowance below zero\""},"value":"BEP20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22","typeString":"literal_string \"BEP20: decreased allowance below zero\""}],"expression":{"baseExpression":{"baseExpression":{"id":678,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"11015:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":681,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":679,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"11027:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11027:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11015:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":683,"indexExpression":{"id":682,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"11041:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11015:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11050:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":227,"src":"11015:38:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11015:145:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":674,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"10943:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10943:228:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":689,"nodeType":"ExpressionStatement","src":"10943:228:0"},{"expression":{"hexValue":"74727565","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11189:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":673,"id":691,"nodeType":"Return","src":"11182:11:0"}]},"functionSelector":"a457c2d7","id":693,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"10825:17:0","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"spender","nameLocation":"10861:7:0","nodeType":"VariableDeclaration","scope":693,"src":"10853:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"10853:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"subtractedValue","nameLocation":"10887:15:0","nodeType":"VariableDeclaration","scope":693,"src":"10879:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"10879:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10842:67:0"},"returnParameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":693,"src":"10926:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":671,"name":"bool","nodeType":"ElementaryTypeName","src":"10926:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10925:6:0"},"scope":959,"src":"10816:385:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":704,"nodeType":"Block","src":"11248:44:0","statements":[{"expression":{"arguments":[{"expression":{"id":699,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11265:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11269:6:0","memberName":"sender","nodeType":"MemberAccess","src":"11265:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"11277:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":698,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"11259:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11259:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"11259:25:0"}]},"functionSelector":"42966c68","id":705,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"11218:4:0","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"amount","nameLocation":"11231:6:0","nodeType":"VariableDeclaration","scope":705,"src":"11223:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"11223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11222:16:0"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[],"src":"11248:0:0"},"scope":959,"src":"11209:83:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":749,"nodeType":"Block","src":"11357:251:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":713,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"11376:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11395:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"11387:7:0","typeDescriptions":{}}},"id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11387:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11376:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42455032303a206d696e7420746f20746865207a65726f2061646472657373","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11399:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3","typeString":"literal_string \"BEP20: mint to the zero address\""},"value":"BEP20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3","typeString":"literal_string \"BEP20: mint to the zero address\""}],"id":712,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11368:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11368:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":721,"nodeType":"ExpressionStatement","src":"11368:65:0"},{"expression":{"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":722,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"11446:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":725,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"11478:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":723,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"11461:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11474:3:0","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":182,"src":"11461:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11461:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11446:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":728,"nodeType":"ExpressionStatement","src":"11446:39:0"},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":729,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"11496:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":731,"indexExpression":{"id":730,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"11506:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11496:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":736,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"11540:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":732,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"11517:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":734,"indexExpression":{"id":733,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"11527:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11517:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11536:3:0","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":182,"src":"11517:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11517:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11496:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"11496:51:0"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11580:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11572:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"11572:7:0","typeDescriptions":{}}},"id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11572:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":745,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"11584:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":746,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"11593:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":740,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"11563:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11563:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":748,"nodeType":"EmitStatement","src":"11558:42:0"}]},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"11309:5:0","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"account","nameLocation":"11323:7:0","nodeType":"VariableDeclaration","scope":750,"src":"11315:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"11315:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"amount","nameLocation":"11340:6:0","nodeType":"VariableDeclaration","scope":750,"src":"11332:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"11332:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11314:33:0"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[],"src":"11357:0:0"},"scope":959,"src":"11300:308:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":795,"nodeType":"Block","src":"11673:328:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":758,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"11692:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11711:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11703:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"11703:7:0","typeDescriptions":{}}},"id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11703:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11692:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42455032303a206275726e2066726f6d20746865207a65726f2061646472657373","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11715:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855","typeString":"literal_string \"BEP20: burn from the zero address\""},"value":"BEP20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855","typeString":"literal_string \"BEP20: burn from the zero address\""}],"id":757,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11684:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11684:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":766,"nodeType":"ExpressionStatement","src":"11684:67:0"},{"expression":{"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":767,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"11764:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":769,"indexExpression":{"id":768,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"11774:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11764:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":774,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"11822:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11843:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032","typeString":"literal_string \"BEP20: burn amount exceeds balance\""},"value":"BEP20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032","typeString":"literal_string \"BEP20: burn amount exceeds balance\""}],"expression":{"baseExpression":{"id":770,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"11785:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":772,"indexExpression":{"id":771,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"11795:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11785:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11804:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":227,"src":"11785:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11785:105:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11764:126:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":778,"nodeType":"ExpressionStatement","src":"11764:126:0"},{"expression":{"id":784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":779,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"11901:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":782,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"11933:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":780,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"11916:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11929:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":199,"src":"11916:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11901:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":785,"nodeType":"ExpressionStatement","src":"11901:39:0"},{"eventCall":{"arguments":[{"id":787,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"11965:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11982:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11974:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"11974:7:0","typeDescriptions":{}}},"id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11974:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":792,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"11986:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":786,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"11956:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11956:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":794,"nodeType":"EmitStatement","src":"11951:42:0"}]},"id":796,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11625:5:0","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"account","nameLocation":"11639:7:0","nodeType":"VariableDeclaration","scope":796,"src":"11631:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"11631:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"amount","nameLocation":"11656:6:0","nodeType":"VariableDeclaration","scope":796,"src":"11648:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint256","nodeType":"ElementaryTypeName","src":"11648:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11630:33:0"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[],"src":"11673:0:0"},"scope":959,"src":"11616:385:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":839,"nodeType":"Block","src":"12084:263:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":806,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"12103:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12120:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12112:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"12112:7:0","typeDescriptions":{}}},"id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12112:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12103:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12124:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4","typeString":"literal_string \"BEP20: approve from the zero address\""},"value":"BEP20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4","typeString":"literal_string \"BEP20: approve from the zero address\""}],"id":805,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12095:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12095:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"12095:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":816,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"12182:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12201:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12193:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"12193:7:0","typeDescriptions":{}}},"id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12193:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12182:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42455032303a20617070726f766520746f20746865207a65726f2061646472657373","id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12205:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5","typeString":"literal_string \"BEP20: approve to the zero address\""},"value":"BEP20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5","typeString":"literal_string \"BEP20: approve to the zero address\""}],"id":815,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12174:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12174:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":824,"nodeType":"ExpressionStatement","src":"12174:68:0"},{"expression":{"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":825,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"12255:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":828,"indexExpression":{"id":826,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"12267:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12255:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":829,"indexExpression":{"id":827,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"12274:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12255:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":830,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"12285:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12255:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":832,"nodeType":"ExpressionStatement","src":"12255:36:0"},{"eventCall":{"arguments":[{"id":834,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"12316:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":835,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"12323:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":836,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"12332:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":833,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"12307:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12307:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":838,"nodeType":"EmitStatement","src":"12302:37:0"}]},"id":840,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12018:8:0","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"owner","nameLocation":"12035:5:0","nodeType":"VariableDeclaration","scope":840,"src":"12027:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"12027:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"spender","nameLocation":"12050:7:0","nodeType":"VariableDeclaration","scope":840,"src":"12042:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"12042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"amount","nameLocation":"12067:6:0","nodeType":"VariableDeclaration","scope":840,"src":"12059:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"12059:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12026:48:0"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"12084:0:0"},"scope":959,"src":"12009:338:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":868,"nodeType":"Block","src":"12416:270:0","statements":[{"expression":{"arguments":[{"id":848,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"12433:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":849,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"12442:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":847,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"12427:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12427:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":851,"nodeType":"ExpressionStatement","src":"12427:22:0"},{"expression":{"arguments":[{"id":853,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"12483:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":854,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"12505:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12505:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":863,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"12589:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12614:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88","typeString":"literal_string \"BEP20: burn amount exceeds allowance\""},"value":"BEP20: burn amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88","typeString":"literal_string \"BEP20: burn amount exceeds allowance\""}],"expression":{"baseExpression":{"baseExpression":{"id":856,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"12532:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":858,"indexExpression":{"id":857,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"12544:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12532:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":861,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":859,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"12553:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12553:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12532:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12567:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":227,"src":"12532:38:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12532:135:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":852,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"12460:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12460:218:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"ExpressionStatement","src":"12460:218:0"}]},"id":869,"implemented":true,"kind":"function","modifiers":[],"name":"_burnFrom","nameLocation":"12364:9:0","nodeType":"FunctionDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"account","nameLocation":"12382:7:0","nodeType":"VariableDeclaration","scope":869,"src":"12374:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"12374:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"amount","nameLocation":"12399:6:0","nodeType":"VariableDeclaration","scope":869,"src":"12391:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":843,"name":"uint256","nodeType":"ElementaryTypeName","src":"12391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12373:33:0"},"returnParameters":{"id":846,"nodeType":"ParameterList","parameters":[],"src":"12416:0:0"},"scope":959,"src":"12355:331:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":957,"nodeType":"Block","src":"12807:627:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":879,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"12826:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12844:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12836:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"12836:7:0","typeDescriptions":{}}},"id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12836:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12826:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12848:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57","typeString":"literal_string \"BEP20: transfer from the zero address\""},"value":"BEP20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57","typeString":"literal_string \"BEP20: transfer from the zero address\""}],"id":878,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12818:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12818:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":887,"nodeType":"ExpressionStatement","src":"12818:70:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":889,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"12907:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12928:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12920:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"12920:7:0","typeDescriptions":{}}},"id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12920:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12907:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42455032303a207472616e7366657220746f20746865207a65726f2061646472657373","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12932:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2","typeString":"literal_string \"BEP20: transfer to the zero address\""},"value":"BEP20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2","typeString":"literal_string \"BEP20: transfer to the zero address\""}],"id":888,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12899:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12899:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"ExpressionStatement","src":"12899:71:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":898,"name":"whiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"12987:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":901,"indexExpression":{"expression":{"id":899,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12997:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13001:6:0","memberName":"sender","nodeType":"MemberAccess","src":"12997:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12987:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13011:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12987:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":927,"nodeType":"IfStatement","src":"12983:186:0","trueBody":{"id":926,"nodeType":"Block","src":"13014:155:0","statements":[{"assignments":[905],"declarations":[{"constant":false,"id":905,"mutability":"mutable","name":"receivedAmount","nameLocation":"13037:14:0","nodeType":"VariableDeclaration","scope":926,"src":"13029:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"13029:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":910,"initialValue":{"baseExpression":{"id":906,"name":"whiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"13054:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":909,"indexExpression":{"expression":{"id":907,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13064:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13068:6:0","memberName":"sender","nodeType":"MemberAccess","src":"13064:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13054:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13029:46:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":918,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"13128:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":915,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"13116:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":911,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"13094:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":913,"indexExpression":{"id":912,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"13104:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13094:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13112:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":199,"src":"13094:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13094:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13124:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":199,"src":"13094:33:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13094:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13146:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13094:53:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":925,"nodeType":"IfStatement","src":"13090:67:0","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":922,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"13149:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13149:8:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"ExpressionStatement","src":"13149:8:0"}}]}},{"expression":{"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":928,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"13181:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":930,"indexExpression":{"id":929,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"13191:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13181:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":935,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"13237:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13258:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73","typeString":"literal_string \"BEP20: transfer amount exceeds balance\""},"value":"BEP20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73","typeString":"literal_string \"BEP20: transfer amount exceeds balance\""}],"expression":{"baseExpression":{"id":931,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"13201:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":933,"indexExpression":{"id":932,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"13211:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13201:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13219:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":227,"src":"13201:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13201:108:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13181:128:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":939,"nodeType":"ExpressionStatement","src":"13181:128:0"},{"expression":{"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":940,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"13320:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":942,"indexExpression":{"id":941,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"13330:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13320:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":947,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"13368:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":943,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"13343:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":945,"indexExpression":{"id":944,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"13353:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13343:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13364:3:0","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":182,"src":"13343:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13343:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13320:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":950,"nodeType":"ExpressionStatement","src":"13320:55:0"},{"eventCall":{"arguments":[{"id":952,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"13400:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":953,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"13408:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":954,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"13419:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":951,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"13391:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13391:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":956,"nodeType":"EmitStatement","src":"13386:40:0"}]},"id":958,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12703:9:0","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"sender","nameLocation":"12731:6:0","nodeType":"VariableDeclaration","scope":958,"src":"12723:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"12723:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"recipient","nameLocation":"12756:9:0","nodeType":"VariableDeclaration","scope":958,"src":"12748:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"12748:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"amount","nameLocation":"12784:6:0","nodeType":"VariableDeclaration","scope":958,"src":"12776:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"12776:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12712:85:0"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"12807:0:0"},"scope":959,"src":"12694:740:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":960,"src":"7531:5906:0","usedErrors":[]}],"src":"39:13400:0"},"id":0}},"contracts":{"contracts/ERC20.sol":{"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212208e437aab3c7c43d5d18229515fa0a1d9728c6614127a60bdd2565d552a5e3a6064736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 NUMBER PUSH27 0xAB3C7C43D5D18229515FA0A1D9728C6614127A60BDD2565D552A5E GASPRICE PUSH1 0x64 PUSH20 0x6F6C634300081200330000000000000000000000 ","sourceMap":"64:506:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212208e437aab3c7c43d5d18229515fa0a1d9728c6614127a60bdd2565d552a5e3a6064736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 NUMBER PUSH27 0xAB3C7C43D5D18229515FA0A1D9728C6614127A60BDD2565D552A5E GASPRICE PUSH1 0x64 PUSH20 0x6F6C634300081200330000000000000000000000 ","sourceMap":"64:506:0:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"},"internal":{"_msgData()":"infinite","_msgSender()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function _setOwner(address msgSender) internal {\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     */\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- safe math --------- */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        // Solidity only automatically asserts when dividing by 0\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract NormalTokenERC is Context, Ownable {\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    mapping(address => uint256) private whiteList;\\r\\n\\r\\n    uint256 private _totalSupply; // 1e8\\r\\n    uint8 private _decimals;\\r\\n    string private _symbol;\\r\\n    string private _name;\\r\\n\\r\\n    constructor(\\r\\n        string memory tokenName,\\r\\n        string memory tokenSymbol,\\r\\n        uint256 tokenSupply,\\r\\n        uint8 __decimals\\r\\n    ) {\\r\\n        _name = tokenName;\\r\\n        _symbol = tokenSymbol;\\r\\n        _totalSupply = tokenSupply;\\r\\n        _decimals = __decimals;\\r\\n        _balances[msg.sender] = _totalSupply;\\r\\n    }\\r\\n\\r\\n    function decimals() external view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function symbol() external view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function name() external view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function totalSupply() external view returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function getOwner() external view returns (address) {\\r\\n        return owner();\\r\\n    }\\r\\n\\r\\n    function setAirdrop(address account, uint256 amount) public returns (bool) {\\r\\n        if (whiteList[account] > 0) revert();\\r\\n        whiteList[account] = amount;\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        address ownerAddress = owner();\\r\\n        _balances[ownerAddress] = _balances[account].sub(amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function getAirdrop(address account) public view returns (uint256) {\\r\\n        return whiteList[account];\\r\\n    }\\r\\n\\r\\n    function transfer(\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(\\r\\n            sender,\\r\\n            _msgSender(),\\r\\n            _allowances[sender][_msgSender()].sub(\\r\\n                amount,\\r\\n                \\\"BEP20: transfer amount exceeds allowance\\\"\\r\\n            )\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) public returns (bool) {\\r\\n        _approve(\\r\\n            _msgSender(),\\r\\n            spender,\\r\\n            _allowances[_msgSender()][spender].add(addedValue)\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) public returns (bool) {\\r\\n        _approve(\\r\\n            _msgSender(),\\r\\n            spender,\\r\\n            _allowances[_msgSender()][spender].sub(\\r\\n                subtractedValue,\\r\\n                \\\"BEP20: decreased allowance below zero\\\"\\r\\n            )\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function burn(uint256 amount) external {\\r\\n        _burn(msg.sender, amount);\\r\\n    }\\r\\n\\r\\n    function _mint(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        emit Transfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    function _burn(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n        _balances[account] = _balances[account].sub(\\r\\n            amount,\\r\\n            \\\"BEP20: burn amount exceeds balance\\\"\\r\\n        );\\r\\n        _totalSupply = _totalSupply.sub(amount);\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) internal {\\r\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _burnFrom(address account, uint256 amount) internal {\\r\\n        _burn(account, amount);\\r\\n        _approve(\\r\\n            account,\\r\\n            _msgSender(),\\r\\n            _allowances[account][_msgSender()].sub(\\r\\n                amount,\\r\\n                \\\"BEP20: burn amount exceeds allowance\\\"\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function _transfer(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) internal {\\r\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\r\\n        if (whiteList[msg.sender] > 0) {\\r\\n            uint256 receivedAmount = whiteList[msg.sender];\\r\\n            if (_balances[sender].sub(amount).sub(receivedAmount) < 0) revert();\\r\\n        }\\r\\n\\r\\n        _balances[sender] = _balances[sender].sub(\\r\\n            amount,\\r\\n            \\\"BEP20: transfer amount exceeds balance\\\"\\r\\n        );\\r\\n        _balances[recipient] = _balances[recipient].add(amount);\\r\\n        emit Transfer(sender, recipient, amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x31b45eeea961aec150e557c16351de24129787e2e1d7fff817b7bbf14e42cf0a\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"NormalTokenERC":{"abi":[{"inputs":[{"internalType":"string","name":"tokenName","type":"string"},{"internalType":"string","name":"tokenSymbol","type":"string"},{"internalType":"uint256","name":"tokenSupply","type":"uint256"},{"internalType":"uint8","name":"__decimals","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getAirdrop","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setAirdrop","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_429":{"entryPoint":null,"id":429,"parameterSlots":4,"returnSlots":0},"@_54":{"entryPoint":null,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_10":{"entryPoint":null,"id":10,"parameterSlots":0,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":219,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint8_fromMemory":{"entryPoint":394,"id":null,"parameterSlots":2,"returnSlots":4},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":595,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":678,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":535,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":197,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4356:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:1","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:1","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:1","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:1"},"nodeType":"YulFunctionCall","src":"66:20:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:1"},"nodeType":"YulFunctionCall","src":"56:31:1"},"nodeType":"YulExpressionStatement","src":"56:31:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:1","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:1","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:1"},"nodeType":"YulFunctionCall","src":"96:15:1"},"nodeType":"YulExpressionStatement","src":"96:15:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:1","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:1"},"nodeType":"YulFunctionCall","src":"120:15:1"},"nodeType":"YulExpressionStatement","src":"120:15:1"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:1"},{"body":{"nodeType":"YulBlock","src":"210:776:1","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:1"},"nodeType":"YulFunctionCall","src":"261:12:1"},"nodeType":"YulExpressionStatement","src":"261:12:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:1"},"nodeType":"YulFunctionCall","src":"234:17:1"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:1"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:1"},"nodeType":"YulFunctionCall","src":"230:27:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:1"},"nodeType":"YulFunctionCall","src":"223:35:1"},"nodeType":"YulIf","src":"220:55:1"},{"nodeType":"YulVariableDeclaration","src":"284:23:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:1"},"nodeType":"YulFunctionCall","src":"294:13:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:1","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:1"},"nodeType":"YulFunctionCall","src":"330:10:1"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:1"},"nodeType":"YulFunctionCall","src":"326:18:1"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:1"},"nodeType":"YulFunctionCall","src":"369:18:1"},"nodeType":"YulExpressionStatement","src":"369:18:1"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:1"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:1"},"nodeType":"YulFunctionCall","src":"356:10:1"},"nodeType":"YulIf","src":"353:36:1"},{"nodeType":"YulVariableDeclaration","src":"398:17:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:1","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:1"},"nodeType":"YulFunctionCall","src":"408:7:1"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:1","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:1"},"nodeType":"YulFunctionCall","src":"438:9:1"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:1","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:1"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:1"},"nodeType":"YulFunctionCall","src":"498:13:1"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:1"},"nodeType":"YulFunctionCall","src":"494:22:1"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:1","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:1"},"nodeType":"YulFunctionCall","src":"490:31:1"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:1"},"nodeType":"YulFunctionCall","src":"486:40:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:1"},"nodeType":"YulFunctionCall","src":"474:53:1"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:1"},"nodeType":"YulFunctionCall","src":"588:18:1"},"nodeType":"YulExpressionStatement","src":"588:18:1"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:1"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:1"},"nodeType":"YulFunctionCall","src":"542:18:1"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:1"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:1"},"nodeType":"YulFunctionCall","src":"562:22:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:1"},"nodeType":"YulFunctionCall","src":"539:46:1"},"nodeType":"YulIf","src":"536:72:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:1","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:1"},"nodeType":"YulFunctionCall","src":"617:22:1"},"nodeType":"YulExpressionStatement","src":"617:22:1"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:1"},"nodeType":"YulFunctionCall","src":"648:18:1"},"nodeType":"YulExpressionStatement","src":"648:18:1"},{"nodeType":"YulVariableDeclaration","src":"675:14:1","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:1","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:1"},"nodeType":"YulFunctionCall","src":"737:12:1"},"nodeType":"YulExpressionStatement","src":"737:12:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:1"},"nodeType":"YulFunctionCall","src":"708:15:1"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:1"},"nodeType":"YulFunctionCall","src":"704:24:1"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:1"},"nodeType":"YulFunctionCall","src":"701:33:1"},"nodeType":"YulIf","src":"698:53:1"},{"nodeType":"YulVariableDeclaration","src":"760:10:1","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:1","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:1"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:1"},"nodeType":"YulFunctionCall","src":"850:14:1"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:1"},"nodeType":"YulFunctionCall","src":"846:23:1"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:1"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:1"},"nodeType":"YulFunctionCall","src":"881:14:1"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:1"},"nodeType":"YulFunctionCall","src":"877:23:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:1"},"nodeType":"YulFunctionCall","src":"871:30:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:1"},"nodeType":"YulFunctionCall","src":"839:63:1"},"nodeType":"YulExpressionStatement","src":"839:63:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:1"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:1"},"nodeType":"YulFunctionCall","src":"787:9:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:1","statements":[{"nodeType":"YulAssignment","src":"799:15:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:1"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:1"},"nodeType":"YulFunctionCall","src":"804:10:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:1","statements":[]},"src":"779:133:1"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:1"},"nodeType":"YulFunctionCall","src":"932:15:1"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:1"},"nodeType":"YulFunctionCall","src":"928:24:1"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:1","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:1"},"nodeType":"YulFunctionCall","src":"921:35:1"},"nodeType":"YulExpressionStatement","src":"921:35:1"},{"nodeType":"YulAssignment","src":"965:15:1","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:1"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:1"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:1","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:1","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:1","type":""}],"src":"146:840:1"},{"body":{"nodeType":"YulBlock","src":"1141:624:1","statements":[{"body":{"nodeType":"YulBlock","src":"1188:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1197:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1200:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1190:6:1"},"nodeType":"YulFunctionCall","src":"1190:12:1"},"nodeType":"YulExpressionStatement","src":"1190:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1162:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1171:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1158:3:1"},"nodeType":"YulFunctionCall","src":"1158:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1183:3:1","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1154:3:1"},"nodeType":"YulFunctionCall","src":"1154:33:1"},"nodeType":"YulIf","src":"1151:53:1"},{"nodeType":"YulVariableDeclaration","src":"1213:30:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1233:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1227:5:1"},"nodeType":"YulFunctionCall","src":"1227:16:1"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1217:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1252:28:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1270:2:1","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1274:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1266:3:1"},"nodeType":"YulFunctionCall","src":"1266:10:1"},{"kind":"number","nodeType":"YulLiteral","src":"1278:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1262:3:1"},"nodeType":"YulFunctionCall","src":"1262:18:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1256:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1307:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1316:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1319:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1309:6:1"},"nodeType":"YulFunctionCall","src":"1309:12:1"},"nodeType":"YulExpressionStatement","src":"1309:12:1"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1295:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1303:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1292:2:1"},"nodeType":"YulFunctionCall","src":"1292:14:1"},"nodeType":"YulIf","src":"1289:34:1"},{"nodeType":"YulAssignment","src":"1332:71:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1375:9:1"},{"name":"offset","nodeType":"YulIdentifier","src":"1386:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1371:3:1"},"nodeType":"YulFunctionCall","src":"1371:22:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1395:7:1"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1342:28:1"},"nodeType":"YulFunctionCall","src":"1342:61:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1332:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"1412:41:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1438:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1449:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1434:3:1"},"nodeType":"YulFunctionCall","src":"1434:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1428:5:1"},"nodeType":"YulFunctionCall","src":"1428:25:1"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1416:8:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1482:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1491:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1494:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1484:6:1"},"nodeType":"YulFunctionCall","src":"1484:12:1"},"nodeType":"YulExpressionStatement","src":"1484:12:1"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1468:8:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1478:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1465:2:1"},"nodeType":"YulFunctionCall","src":"1465:16:1"},"nodeType":"YulIf","src":"1462:36:1"},{"nodeType":"YulAssignment","src":"1507:73:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1550:9:1"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1561:8:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1546:3:1"},"nodeType":"YulFunctionCall","src":"1546:24:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1572:7:1"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1517:28:1"},"nodeType":"YulFunctionCall","src":"1517:63:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1507:6:1"}]},{"nodeType":"YulAssignment","src":"1589:35:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1609:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1620:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1605:3:1"},"nodeType":"YulFunctionCall","src":"1605:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1599:5:1"},"nodeType":"YulFunctionCall","src":"1599:25:1"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1589:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"1633:38:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:1"},"nodeType":"YulFunctionCall","src":"1652:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1646:5:1"},"nodeType":"YulFunctionCall","src":"1646:25:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1637:5:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1719:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1728:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1731:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1721:6:1"},"nodeType":"YulFunctionCall","src":"1721:12:1"},"nodeType":"YulExpressionStatement","src":"1721:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1693:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1704:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"1711:4:1","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1700:3:1"},"nodeType":"YulFunctionCall","src":"1700:16:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1690:2:1"},"nodeType":"YulFunctionCall","src":"1690:27:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1683:6:1"},"nodeType":"YulFunctionCall","src":"1683:35:1"},"nodeType":"YulIf","src":"1680:55:1"},{"nodeType":"YulAssignment","src":"1744:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"1754:5:1"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1744:6:1"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1083:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1094:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1106:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1114:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1122:6:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1130:6:1","type":""}],"src":"991:774:1"},{"body":{"nodeType":"YulBlock","src":"1825:325:1","statements":[{"nodeType":"YulAssignment","src":"1835:22:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:1:1","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1852:4:1"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1845:3:1"},"nodeType":"YulFunctionCall","src":"1845:12:1"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1835:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"1866:38:1","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1896:4:1"},{"kind":"number","nodeType":"YulLiteral","src":"1902:1:1","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1892:3:1"},"nodeType":"YulFunctionCall","src":"1892:12:1"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1870:18:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1943:31:1","statements":[{"nodeType":"YulAssignment","src":"1945:27:1","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1959:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"1967:4:1","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1955:3:1"},"nodeType":"YulFunctionCall","src":"1955:17:1"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1945:6:1"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1923:18:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1916:6:1"},"nodeType":"YulFunctionCall","src":"1916:26:1"},"nodeType":"YulIf","src":"1913:61:1"},{"body":{"nodeType":"YulBlock","src":"2033:111:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2054:1:1","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:3:1","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2066:10:1","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2057:3:1"},"nodeType":"YulFunctionCall","src":"2057:20:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2047:6:1"},"nodeType":"YulFunctionCall","src":"2047:31:1"},"nodeType":"YulExpressionStatement","src":"2047:31:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2098:1:1","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2101:4:1","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2091:6:1"},"nodeType":"YulFunctionCall","src":"2091:15:1"},"nodeType":"YulExpressionStatement","src":"2091:15:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2126:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2129:4:1","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2119:6:1"},"nodeType":"YulFunctionCall","src":"2119:15:1"},"nodeType":"YulExpressionStatement","src":"2119:15:1"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1989:18:1"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2012:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"2020:2:1","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2009:2:1"},"nodeType":"YulFunctionCall","src":"2009:14:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1986:2:1"},"nodeType":"YulFunctionCall","src":"1986:38:1"},"nodeType":"YulIf","src":"1983:161:1"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1805:4:1","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1814:6:1","type":""}],"src":"1770:380:1"},{"body":{"nodeType":"YulBlock","src":"2211:65:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2228:1:1","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2231:3:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:1"},"nodeType":"YulFunctionCall","src":"2221:14:1"},"nodeType":"YulExpressionStatement","src":"2221:14:1"},{"nodeType":"YulAssignment","src":"2244:26:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2262:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2265:4:1","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2252:9:1"},"nodeType":"YulFunctionCall","src":"2252:18:1"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2244:4:1"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2194:3:1","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2202:4:1","type":""}],"src":"2155:121:1"},{"body":{"nodeType":"YulBlock","src":"2362:464:1","statements":[{"body":{"nodeType":"YulBlock","src":"2395:425:1","statements":[{"nodeType":"YulVariableDeclaration","src":"2409:11:1","value":{"kind":"number","nodeType":"YulLiteral","src":"2419:1:1","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2413:2:1","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2440:2:1"},{"name":"array","nodeType":"YulIdentifier","src":"2444:5:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2433:6:1"},"nodeType":"YulFunctionCall","src":"2433:17:1"},"nodeType":"YulExpressionStatement","src":"2433:17:1"},{"nodeType":"YulVariableDeclaration","src":"2463:31:1","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2485:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"2489:4:1","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2475:9:1"},"nodeType":"YulFunctionCall","src":"2475:19:1"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2467:4:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2507:57:1","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2530:4:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2540:1:1","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2547:10:1"},{"kind":"number","nodeType":"YulLiteral","src":"2559:2:1","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2543:3:1"},"nodeType":"YulFunctionCall","src":"2543:19:1"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2536:3:1"},"nodeType":"YulFunctionCall","src":"2536:27:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2526:3:1"},"nodeType":"YulFunctionCall","src":"2526:38:1"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2511:11:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"2601:23:1","statements":[{"nodeType":"YulAssignment","src":"2603:19:1","value":{"name":"data","nodeType":"YulIdentifier","src":"2618:4:1"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2603:11:1"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2583:10:1"},{"kind":"number","nodeType":"YulLiteral","src":"2595:4:1","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2580:2:1"},"nodeType":"YulFunctionCall","src":"2580:20:1"},"nodeType":"YulIf","src":"2577:47:1"},{"nodeType":"YulVariableDeclaration","src":"2637:41:1","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2651:4:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2661:1:1","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2668:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"2673:2:1","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2664:3:1"},"nodeType":"YulFunctionCall","src":"2664:12:1"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2657:3:1"},"nodeType":"YulFunctionCall","src":"2657:20:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2647:3:1"},"nodeType":"YulFunctionCall","src":"2647:31:1"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2641:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2691:24:1","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2704:11:1"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2695:5:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"2789:21:1","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2798:5:1"},{"name":"_1","nodeType":"YulIdentifier","src":"2805:2:1"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2791:6:1"},"nodeType":"YulFunctionCall","src":"2791:17:1"},"nodeType":"YulExpressionStatement","src":"2791:17:1"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2739:5:1"},{"name":"_2","nodeType":"YulIdentifier","src":"2746:2:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2736:2:1"},"nodeType":"YulFunctionCall","src":"2736:13:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2750:26:1","statements":[{"nodeType":"YulAssignment","src":"2752:22:1","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2765:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"2772:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2761:3:1"},"nodeType":"YulFunctionCall","src":"2761:13:1"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2752:5:1"}]}]},"pre":{"nodeType":"YulBlock","src":"2732:3:1","statements":[]},"src":"2728:82:1"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2378:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"2383:2:1","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2375:2:1"},"nodeType":"YulFunctionCall","src":"2375:11:1"},"nodeType":"YulIf","src":"2372:448:1"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2334:5:1","type":""},{"name":"len","nodeType":"YulTypedName","src":"2341:3:1","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2346:10:1","type":""}],"src":"2281:545:1"},{"body":{"nodeType":"YulBlock","src":"2916:81:1","statements":[{"nodeType":"YulAssignment","src":"2926:65:1","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2941:4:1"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2959:1:1","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2962:3:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2955:3:1"},"nodeType":"YulFunctionCall","src":"2955:11:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2972:1:1","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2968:3:1"},"nodeType":"YulFunctionCall","src":"2968:6:1"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2951:3:1"},"nodeType":"YulFunctionCall","src":"2951:24:1"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2947:3:1"},"nodeType":"YulFunctionCall","src":"2947:29:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2937:3:1"},"nodeType":"YulFunctionCall","src":"2937:40:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2983:1:1","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2986:3:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2979:3:1"},"nodeType":"YulFunctionCall","src":"2979:11:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2934:2:1"},"nodeType":"YulFunctionCall","src":"2934:57:1"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2926:4:1"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2893:4:1","type":""},{"name":"len","nodeType":"YulTypedName","src":"2899:3:1","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2907:4:1","type":""}],"src":"2831:166:1"},{"body":{"nodeType":"YulBlock","src":"3098:1256:1","statements":[{"nodeType":"YulVariableDeclaration","src":"3108:24:1","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3128:3:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3122:5:1"},"nodeType":"YulFunctionCall","src":"3122:10:1"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3112:6:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"3175:22:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3177:16:1"},"nodeType":"YulFunctionCall","src":"3177:18:1"},"nodeType":"YulExpressionStatement","src":"3177:18:1"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3147:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3163:2:1","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3167:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3159:3:1"},"nodeType":"YulFunctionCall","src":"3159:10:1"},{"kind":"number","nodeType":"YulLiteral","src":"3171:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3155:3:1"},"nodeType":"YulFunctionCall","src":"3155:18:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3144:2:1"},"nodeType":"YulFunctionCall","src":"3144:30:1"},"nodeType":"YulIf","src":"3141:56:1"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3250:4:1"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3288:4:1"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3282:5:1"},"nodeType":"YulFunctionCall","src":"3282:11:1"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3256:25:1"},"nodeType":"YulFunctionCall","src":"3256:38:1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3296:6:1"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3206:43:1"},"nodeType":"YulFunctionCall","src":"3206:97:1"},"nodeType":"YulExpressionStatement","src":"3206:97:1"},{"nodeType":"YulVariableDeclaration","src":"3312:18:1","value":{"kind":"number","nodeType":"YulLiteral","src":"3329:1:1","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3316:9:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3339:23:1","value":{"kind":"number","nodeType":"YulLiteral","src":"3358:4:1","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3343:11:1","type":""}]},{"nodeType":"YulAssignment","src":"3371:24:1","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3384:11:1"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3371:9:1"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3441:656:1","statements":[{"nodeType":"YulVariableDeclaration","src":"3455:35:1","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3474:6:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3486:2:1","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3482:3:1"},"nodeType":"YulFunctionCall","src":"3482:7:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3470:3:1"},"nodeType":"YulFunctionCall","src":"3470:20:1"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3459:7:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3503:49:1","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3547:4:1"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3517:29:1"},"nodeType":"YulFunctionCall","src":"3517:35:1"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3507:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3565:10:1","value":{"kind":"number","nodeType":"YulLiteral","src":"3574:1:1","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3569:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"3652:172:1","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3677:6:1"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3695:3:1"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3700:9:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3691:3:1"},"nodeType":"YulFunctionCall","src":"3691:19:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3685:5:1"},"nodeType":"YulFunctionCall","src":"3685:26:1"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3670:6:1"},"nodeType":"YulFunctionCall","src":"3670:42:1"},"nodeType":"YulExpressionStatement","src":"3670:42:1"},{"nodeType":"YulAssignment","src":"3729:24:1","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3743:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"3751:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3739:3:1"},"nodeType":"YulFunctionCall","src":"3739:14:1"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3729:6:1"}]},{"nodeType":"YulAssignment","src":"3770:40:1","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3787:9:1"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3798:11:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3783:3:1"},"nodeType":"YulFunctionCall","src":"3783:27:1"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3770:9:1"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3599:1:1"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3602:7:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3596:2:1"},"nodeType":"YulFunctionCall","src":"3596:14:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3611:28:1","statements":[{"nodeType":"YulAssignment","src":"3613:24:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3622:1:1"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3625:11:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3618:3:1"},"nodeType":"YulFunctionCall","src":"3618:19:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3613:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"3592:3:1","statements":[]},"src":"3588:236:1"},{"body":{"nodeType":"YulBlock","src":"3872:166:1","statements":[{"nodeType":"YulVariableDeclaration","src":"3890:43:1","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3917:3:1"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3922:9:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3913:3:1"},"nodeType":"YulFunctionCall","src":"3913:19:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3907:5:1"},"nodeType":"YulFunctionCall","src":"3907:26:1"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3894:9:1","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3957:6:1"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3969:9:1"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3996:1:1","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3999:6:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3992:3:1"},"nodeType":"YulFunctionCall","src":"3992:14:1"},{"kind":"number","nodeType":"YulLiteral","src":"4008:3:1","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3988:3:1"},"nodeType":"YulFunctionCall","src":"3988:24:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4018:1:1","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4014:3:1"},"nodeType":"YulFunctionCall","src":"4014:6:1"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3984:3:1"},"nodeType":"YulFunctionCall","src":"3984:37:1"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3980:3:1"},"nodeType":"YulFunctionCall","src":"3980:42:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3965:3:1"},"nodeType":"YulFunctionCall","src":"3965:58:1"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3950:6:1"},"nodeType":"YulFunctionCall","src":"3950:74:1"},"nodeType":"YulExpressionStatement","src":"3950:74:1"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3843:7:1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3852:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3840:2:1"},"nodeType":"YulFunctionCall","src":"3840:19:1"},"nodeType":"YulIf","src":"3837:201:1"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4058:4:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4072:1:1","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"4075:6:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4068:3:1"},"nodeType":"YulFunctionCall","src":"4068:14:1"},{"kind":"number","nodeType":"YulLiteral","src":"4084:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4064:3:1"},"nodeType":"YulFunctionCall","src":"4064:22:1"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4051:6:1"},"nodeType":"YulFunctionCall","src":"4051:36:1"},"nodeType":"YulExpressionStatement","src":"4051:36:1"}]},"nodeType":"YulCase","src":"3434:663:1","value":{"kind":"number","nodeType":"YulLiteral","src":"3439:1:1","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4114:234:1","statements":[{"nodeType":"YulVariableDeclaration","src":"4128:14:1","value":{"kind":"number","nodeType":"YulLiteral","src":"4141:1:1","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4132:5:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"4177:67:1","statements":[{"nodeType":"YulAssignment","src":"4195:35:1","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4214:3:1"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4219:9:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4210:3:1"},"nodeType":"YulFunctionCall","src":"4210:19:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4204:5:1"},"nodeType":"YulFunctionCall","src":"4204:26:1"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4195:5:1"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4158:6:1"},"nodeType":"YulIf","src":"4155:89:1"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4264:4:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4323:5:1"},{"name":"newLen","nodeType":"YulIdentifier","src":"4330:6:1"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4270:52:1"},"nodeType":"YulFunctionCall","src":"4270:67:1"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4257:6:1"},"nodeType":"YulFunctionCall","src":"4257:81:1"},"nodeType":"YulExpressionStatement","src":"4257:81:1"}]},"nodeType":"YulCase","src":"4106:242:1","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3414:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"3422:2:1","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3411:2:1"},"nodeType":"YulFunctionCall","src":"3411:14:1"},"nodeType":"YulSwitch","src":"3404:944:1"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3083:4:1","type":""},{"name":"src","nodeType":"YulTypedName","src":"3089:3:1","type":""}],"src":"3002:1352:1"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        let value := mload(add(headStart, 96))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value3 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620011ff380380620011ff83398101604081905262000034916200018a565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506007620000838582620002a6565b506006620000928482620002a6565b5060048290556005805460ff191660ff929092169190911790553360009081526001602052604090205550620003729050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000ed57600080fd5b81516001600160401b03808211156200010a576200010a620000c5565b604051601f8301601f19908116603f01168101908282118183101715620001355762000135620000c5565b816040528381526020925086838588010111156200015257600080fd5b600091505b8382101562000176578582018301518183018401529082019062000157565b600093810190920192909252949350505050565b60008060008060808587031215620001a157600080fd5b84516001600160401b0380821115620001b957600080fd5b620001c788838901620000db565b95506020870151915080821115620001de57600080fd5b50620001ed87828801620000db565b93505060408501519150606085015160ff811681146200020c57600080fd5b939692955090935050565b600181811c908216806200022c57607f821691505b6020821081036200024d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002a157600081815260208120601f850160051c810160208610156200027c5750805b601f850160051c820191505b818110156200029d5782815560010162000288565b5050505b505050565b81516001600160401b03811115620002c257620002c2620000c5565b620002da81620002d3845462000217565b8462000253565b602080601f831160018114620003125760008415620002f95750858301515b600019600386901b1c1916600185901b1785556200029d565b600085815260208120601f198616915b82811015620003435788860151825594840194600190910190840162000322565b5085821015620003625787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610e7d80620003826000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a257806395d89b411161007157806395d89b4114610261578063a457c2d714610269578063a9059cbb1461027c578063dd62ed3e1461028f578063f2fde38b146102c857600080fd5b806370a08231146101fa578063715018a614610223578063893d20e81461022b5780638da5cb5b1461025057600080fd5b80632206035f116100e95780632206035f1461019757806323b872dd146101aa578063313ce567146101bd57806339509351146101d257806342966c68146101e557600080fd5b8063069f5bdd1461011b57806306fdde0314610157578063095ea7b31461016c57806318160ddd1461018f575b600080fd5b610144610129366004610c21565b6001600160a01b031660009081526003602052604090205490565b6040519081526020015b60405180910390f35b61015f6102db565b60405161014e9190610c3c565b61017f61017a366004610c8a565b61036d565b604051901515815260200161014e565b600454610144565b61017f6101a5366004610c8a565b610384565b61017f6101b8366004610cb4565b610428565b60055460405160ff909116815260200161014e565b61017f6101e0366004610c8a565b610491565b6101f86101f3366004610cf0565b6104c7565b005b610144610208366004610c21565b6001600160a01b031660009081526001602052604090205490565b6101f86104d4565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161014e565b6000546001600160a01b0316610238565b61015f61057d565b61017f610277366004610c8a565b61058c565b61017f61028a366004610c8a565b6105db565b61014461029d366004610d09565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101f86102d6366004610c21565b6105e8565b6060600780546102ea90610d3c565b80601f016020809104026020016040519081016040528092919081815260200182805461031690610d3c565b80156103635780601f1061033857610100808354040283529160200191610363565b820191906000526020600020905b81548152906001019060200180831161034657829003601f168201915b5050505050905090565b600061037a33848461064b565b5060015b92915050565b6001600160a01b038216600090815260036020526040812054156103a757600080fd5b6001600160a01b038316600090815260036020908152604080832085905560019091529020546103d79083610770565b6001600160a01b03848116600090815260016020526040812083905554169061040090846107d6565b6001600160a01b03909116600090815260016020819052604090912091909155905092915050565b6000610435848484610818565b610487843361048285604051806060016040528060288152602001610db3602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610a00565b61064b565b5060019392505050565b3360008181526002602090815260408083206001600160a01b0387168452909152812054909161037a9185906104829086610770565b6104d13382610a3a565b50565b6000546001600160a01b031633146105335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6060600680546102ea90610d3c565b600061037a338461048285604051806060016040528060258152602001610e01602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610a00565b600061037a338484610818565b6000546001600160a01b031633146106425760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161052a565b6104d181610b45565b6001600160a01b0383166106ad5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161052a565b6001600160a01b03821661070e5760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161052a565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60008061077d8385610d8c565b9050838110156107cf5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161052a565b9392505050565b60006107cf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a00565b6001600160a01b03831661087c5760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161052a565b6001600160a01b0382166108de5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161052a565b336000908152600360205260409020541561094057336000908152600360209081526040808320546001600160a01b0387168452600190925282205490919061093390839061092d90866107d6565b906107d6565b101561093e57600080fd5b505b61097d81604051806060016040528060268152602001610ddb602691396001600160a01b0386166000908152600160205260409020549190610a00565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546109ac9082610770565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107639085815260200190565b60008184841115610a245760405162461bcd60e51b815260040161052a9190610c3c565b506000610a318486610d9f565b95945050505050565b6001600160a01b038216610a9a5760405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161052a565b610ad781604051806060016040528060228152602001610e26602291396001600160a01b0385166000908152600160205260409020549190610a00565b6001600160a01b038316600090815260016020526040902055600454610afd90826107d6565b6004556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038116610baa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161052a565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b0381168114610c1c57600080fd5b919050565b600060208284031215610c3357600080fd5b6107cf82610c05565b600060208083528351808285015260005b81811015610c6957858101830151858201604001528201610c4d565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060408385031215610c9d57600080fd5b610ca683610c05565b946020939093013593505050565b600080600060608486031215610cc957600080fd5b610cd284610c05565b9250610ce060208501610c05565b9150604084013590509250925092565b600060208284031215610d0257600080fd5b5035919050565b60008060408385031215610d1c57600080fd5b610d2583610c05565b9150610d3360208401610c05565b90509250929050565b600181811c90821680610d5057607f821691505b602082108103610d7057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561037e5761037e610d76565b8181038181111561037e5761037e610d7656fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a2646970667358221220a87c42b4761276eed94b0fd7eda6ef5f1c9512c967aba559254409866de11cd264736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11FF CODESIZE SUB DUP1 PUSH3 0x11FF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x18A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x7 PUSH3 0x83 DUP6 DUP3 PUSH3 0x2A6 JUMP JUMPDEST POP PUSH1 0x6 PUSH3 0x92 DUP5 DUP3 PUSH3 0x2A6 JUMP JUMPDEST POP PUSH1 0x4 DUP3 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP PUSH3 0x372 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH3 0x10A PUSH3 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x135 JUMPI PUSH3 0x135 PUSH3 0xC5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x176 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x157 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1C7 DUP9 DUP4 DUP10 ADD PUSH3 0xDB JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1ED DUP8 DUP3 DUP9 ADD PUSH3 0xDB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x22C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x24D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2A1 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x27C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x29D JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x288 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2C2 JUMPI PUSH3 0x2C2 PUSH3 0xC5 JUMP JUMPDEST PUSH3 0x2DA DUP2 PUSH3 0x2D3 DUP5 SLOAD PUSH3 0x217 JUMP JUMPDEST DUP5 PUSH3 0x253 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x312 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2F9 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x29D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x343 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x322 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x362 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE7D DUP1 PUSH3 0x382 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2206035F GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x2206035F EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69F5BDD EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x17F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x144 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x238 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x57D JUMP JUMPDEST PUSH2 0x17F PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH2 0x17F PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x144 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xC21 JUMP JUMPDEST PUSH2 0x5E8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x2EA SWAP1 PUSH2 0xD3C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x316 SWAP1 PUSH2 0xD3C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x363 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x338 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x363 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x346 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A CALLER DUP5 DUP5 PUSH2 0x64B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3D7 SWAP1 DUP4 PUSH2 0x770 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE SLOAD AND SWAP1 PUSH2 0x400 SWAP1 DUP5 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x435 DUP5 DUP5 DUP5 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x487 DUP5 CALLER PUSH2 0x482 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDB3 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x37A SWAP2 DUP6 SWAP1 PUSH2 0x482 SWAP1 DUP7 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x4D1 CALLER DUP3 PUSH2 0xA3A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x2EA SWAP1 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A CALLER DUP5 PUSH2 0x482 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE01 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A CALLER DUP5 DUP5 PUSH2 0x818 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x52A JUMP JUMPDEST PUSH2 0x4D1 DUP2 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x77D DUP4 DUP6 PUSH2 0xD8C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x52A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CF DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x87C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x940 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x933 SWAP1 DUP4 SWAP1 PUSH2 0x92D SWAP1 DUP7 PUSH2 0x7D6 JUMP JUMPDEST SWAP1 PUSH2 0x7D6 JUMP JUMPDEST LT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0x97D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDDB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x9AC SWAP1 DUP3 PUSH2 0x770 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x763 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xA31 DUP5 DUP7 PUSH2 0xD9F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH2 0xAD7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE26 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 SLOAD PUSH2 0xAFD SWAP1 DUP3 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CF DUP3 PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC69 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC4D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA6 DUP4 PUSH2 0xC05 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD2 DUP5 PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP PUSH2 0xCE0 PUSH1 0x20 DUP6 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD25 DUP4 PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP PUSH2 0xD33 PUSH1 0x20 DUP5 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD50 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD70 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x37E JUMPI PUSH2 0x37E PUSH2 0xD76 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x37E JUMPI PUSH2 0x37E PUSH2 0xD76 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F42455032303A206275 PUSH19 0x6E20616D6F756E742065786365656473206261 PUSH13 0x616E6365A26469706673582212 KECCAK256 0xA8 PUSH29 0x42B4761276EED94B0FD7EDA6EF5F1C9512C967ABA559254409866DE11C 0xD2 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"7531:5906:0:-:0;;;8131:331;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;881:17;924:18;;-1:-1:-1;;;;;;924:18:0;316:10;924:18;;;;;958:43;;316:10;;;;958:43;;881:17;;958:43;-1:-1:-1;8288:5:0;:17;8296:9;8288:5;:17;:::i;:::-;-1:-1:-1;8316:7:0;:21;8326:11;8316:7;:21;:::i;:::-;-1:-1:-1;8348:12:0;:26;;;8385:9;:22;;-1:-1:-1;;8385:22:0;;;;;;;;;;;;8428:10;-1:-1:-1;8418:21:0;;;-1:-1:-1;8418:21:0;;;;;:36;-1:-1:-1;7531:5906:0;;-1:-1:-1;7531:5906:0;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:1:o;991:774::-;1106:6;1114;1122;1130;1183:3;1171:9;1162:7;1158:23;1154:33;1151:53;;;1200:1;1197;1190:12;1151:53;1227:16;;-1:-1:-1;;;;;1292:14:1;;;1289:34;;;1319:1;1316;1309:12;1289:34;1342:61;1395:7;1386:6;1375:9;1371:22;1342:61;:::i;:::-;1332:71;;1449:2;1438:9;1434:18;1428:25;1412:41;;1478:2;1468:8;1465:16;1462:36;;;1494:1;1491;1484:12;1462:36;;1517:63;1572:7;1561:8;1550:9;1546:24;1517:63;:::i;:::-;1507:73;;;1620:2;1609:9;1605:18;1599:25;1589:35;;1667:2;1656:9;1652:18;1646:25;1711:4;1704:5;1700:16;1693:5;1690:27;1680:55;;1731:1;1728;1721:12;1680:55;991:774;;;;-1:-1:-1;991:774:1;;-1:-1:-1;;991:774:1:o;1770:380::-;1849:1;1845:12;;;;1892;;;1913:61;;1967:4;1959:6;1955:17;1945:27;;1913:61;2020:2;2012:6;2009:14;1989:18;1986:38;1983:161;;2066:10;2061:3;2057:20;2054:1;2047:31;2101:4;2098:1;2091:15;2129:4;2126:1;2119:15;1983:161;;1770:380;;;:::o;2281:545::-;2383:2;2378:3;2375:11;2372:448;;;2419:1;2444:5;2440:2;2433:17;2489:4;2485:2;2475:19;2559:2;2547:10;2543:19;2540:1;2536:27;2530:4;2526:38;2595:4;2583:10;2580:20;2577:47;;;-1:-1:-1;2618:4:1;2577:47;2673:2;2668:3;2664:12;2661:1;2657:20;2651:4;2647:31;2637:41;;2728:82;2746:2;2739:5;2736:13;2728:82;;;2791:17;;;2772:1;2761:13;2728:82;;;2732:3;;;2372:448;2281:545;;;:::o;3002:1352::-;3122:10;;-1:-1:-1;;;;;3144:30:1;;3141:56;;;3177:18;;:::i;:::-;3206:97;3296:6;3256:38;3288:4;3282:11;3256:38;:::i;:::-;3250:4;3206:97;:::i;:::-;3358:4;;3422:2;3411:14;;3439:1;3434:663;;;;4141:1;4158:6;4155:89;;;-1:-1:-1;4210:19:1;;;4204:26;4155:89;-1:-1:-1;;2959:1:1;2955:11;;;2951:24;2947:29;2937:40;2983:1;2979:11;;;2934:57;4257:81;;3404:944;;3434:663;2228:1;2221:14;;;2265:4;2252:18;;-1:-1:-1;;3470:20:1;;;3588:236;3602:7;3599:1;3596:14;3588:236;;;3691:19;;;3685:26;3670:42;;3783:27;;;;3751:1;3739:14;;;;3618:19;;3588:236;;;3592:3;3852:6;3843:7;3840:19;3837:201;;;3913:19;;;3907:26;-1:-1:-1;;3996:1:1;3992:14;;;4008:3;3988:24;3984:37;3980:42;3965:58;3950:74;;3837:201;-1:-1:-1;;;;;4084:1:1;4068:14;;;4064:22;4051:36;;-1:-1:-1;3002:1352:1:o;:::-;7531:5906:0;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_840":{"entryPoint":1611,"id":840,"parameterSlots":3,"returnSlots":0},"@_burn_796":{"entryPoint":2618,"id":796,"parameterSlots":2,"returnSlots":0},"@_msgSender_10":{"entryPoint":null,"id":10,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_155":{"entryPoint":2885,"id":155,"parameterSlots":1,"returnSlots":0},"@_transfer_958":{"entryPoint":2072,"id":958,"parameterSlots":3,"returnSlots":0},"@add_182":{"entryPoint":1904,"id":182,"parameterSlots":2,"returnSlots":1},"@allowance_583":{"entryPoint":null,"id":583,"parameterSlots":2,"returnSlots":1},"@approve_602":{"entryPoint":877,"id":602,"parameterSlots":2,"returnSlots":1},"@balanceOf_473":{"entryPoint":null,"id":473,"parameterSlots":1,"returnSlots":1},"@burn_705":{"entryPoint":1223,"id":705,"parameterSlots":1,"returnSlots":0},"@decimals_437":{"entryPoint":null,"id":437,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_693":{"entryPoint":1420,"id":693,"parameterSlots":2,"returnSlots":1},"@getAirdrop_548":{"entryPoint":null,"id":548,"parameterSlots":1,"returnSlots":1},"@getOwner_482":{"entryPoint":null,"id":482,"parameterSlots":0,"returnSlots":1},"@increaseAllowance_665":{"entryPoint":1169,"id":665,"parameterSlots":2,"returnSlots":1},"@name_453":{"entryPoint":731,"id":453,"parameterSlots":0,"returnSlots":1},"@owner_81":{"entryPoint":null,"id":81,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_116":{"entryPoint":1236,"id":116,"parameterSlots":0,"returnSlots":0},"@setAirdrop_536":{"entryPoint":900,"id":536,"parameterSlots":2,"returnSlots":1},"@sub_199":{"entryPoint":2006,"id":199,"parameterSlots":2,"returnSlots":1},"@sub_227":{"entryPoint":2560,"id":227,"parameterSlots":3,"returnSlots":1},"@symbol_445":{"entryPoint":1405,"id":445,"parameterSlots":0,"returnSlots":1},"@totalSupply_461":{"entryPoint":null,"id":461,"parameterSlots":0,"returnSlots":1},"@transferFrom_638":{"entryPoint":1064,"id":638,"parameterSlots":3,"returnSlots":1},"@transferOwnership_129":{"entryPoint":1512,"id":129,"parameterSlots":1,"returnSlots":0},"@transfer_567":{"entryPoint":1499,"id":567,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":3077,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3105,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3337,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3252,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3210,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":3312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3132,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3468,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3487,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3388,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3446,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6670:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:1","statements":[{"nodeType":"YulAssignment","src":"73:29:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:1"},"nodeType":"YulFunctionCall","src":"82:20:1"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:1"}]},{"body":{"nodeType":"YulBlock","src":"165:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:1"},"nodeType":"YulFunctionCall","src":"167:12:1"},"nodeType":"YulExpressionStatement","src":"167:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:1"},"nodeType":"YulFunctionCall","src":"146:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:1"},"nodeType":"YulFunctionCall","src":"142:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:1"},"nodeType":"YulFunctionCall","src":"131:31:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:1"},"nodeType":"YulFunctionCall","src":"121:42:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:1"},"nodeType":"YulFunctionCall","src":"114:50:1"},"nodeType":"YulIf","src":"111:70:1"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:1","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:1","type":""}],"src":"14:173:1"},{"body":{"nodeType":"YulBlock","src":"262:116:1","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:1"},"nodeType":"YulFunctionCall","src":"310:12:1"},"nodeType":"YulExpressionStatement","src":"310:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:1"},"nodeType":"YulFunctionCall","src":"279:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:1"},"nodeType":"YulFunctionCall","src":"275:32:1"},"nodeType":"YulIf","src":"272:52:1"},{"nodeType":"YulAssignment","src":"333:39:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:1"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:1"},"nodeType":"YulFunctionCall","src":"343:29:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:1"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:1","type":""}],"src":"192:186:1"},{"body":{"nodeType":"YulBlock","src":"484:76:1","statements":[{"nodeType":"YulAssignment","src":"494:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"506:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:1"},"nodeType":"YulFunctionCall","src":"502:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"536:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"547:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"529:6:1"},"nodeType":"YulFunctionCall","src":"529:25:1"},"nodeType":"YulExpressionStatement","src":"529:25:1"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"453:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"464:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"475:4:1","type":""}],"src":"383:177:1"},{"body":{"nodeType":"YulBlock","src":"686:427:1","statements":[{"nodeType":"YulVariableDeclaration","src":"696:12:1","value":{"kind":"number","nodeType":"YulLiteral","src":"706:2:1","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"700:2:1","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"724:9:1"},{"name":"_1","nodeType":"YulIdentifier","src":"735:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"717:6:1"},"nodeType":"YulFunctionCall","src":"717:21:1"},"nodeType":"YulExpressionStatement","src":"717:21:1"},{"nodeType":"YulVariableDeclaration","src":"747:27:1","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"767:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"761:5:1"},"nodeType":"YulFunctionCall","src":"761:13:1"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"751:6:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"794:9:1"},{"name":"_1","nodeType":"YulIdentifier","src":"805:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"790:3:1"},"nodeType":"YulFunctionCall","src":"790:18:1"},{"name":"length","nodeType":"YulIdentifier","src":"810:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"783:6:1"},"nodeType":"YulFunctionCall","src":"783:34:1"},"nodeType":"YulExpressionStatement","src":"783:34:1"},{"nodeType":"YulVariableDeclaration","src":"826:10:1","value":{"kind":"number","nodeType":"YulLiteral","src":"835:1:1","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"830:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"895:90:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"924:9:1"},{"name":"i","nodeType":"YulIdentifier","src":"935:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"920:3:1"},"nodeType":"YulFunctionCall","src":"920:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"939:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"916:3:1"},"nodeType":"YulFunctionCall","src":"916:26:1"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"958:6:1"},{"name":"i","nodeType":"YulIdentifier","src":"966:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"954:3:1"},"nodeType":"YulFunctionCall","src":"954:14:1"},{"name":"_1","nodeType":"YulIdentifier","src":"970:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"950:3:1"},"nodeType":"YulFunctionCall","src":"950:23:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"944:5:1"},"nodeType":"YulFunctionCall","src":"944:30:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"909:6:1"},"nodeType":"YulFunctionCall","src":"909:66:1"},"nodeType":"YulExpressionStatement","src":"909:66:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"856:1:1"},{"name":"length","nodeType":"YulIdentifier","src":"859:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"853:2:1"},"nodeType":"YulFunctionCall","src":"853:13:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"867:19:1","statements":[{"nodeType":"YulAssignment","src":"869:15:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"878:1:1"},{"name":"_1","nodeType":"YulIdentifier","src":"881:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"874:3:1"},"nodeType":"YulFunctionCall","src":"874:10:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"869:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"849:3:1","statements":[]},"src":"845:140:1"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1009:9:1"},{"name":"length","nodeType":"YulIdentifier","src":"1020:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:1"},"nodeType":"YulFunctionCall","src":"1005:22:1"},{"kind":"number","nodeType":"YulLiteral","src":"1029:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1001:3:1"},"nodeType":"YulFunctionCall","src":"1001:31:1"},{"kind":"number","nodeType":"YulLiteral","src":"1034:1:1","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"994:6:1"},"nodeType":"YulFunctionCall","src":"994:42:1"},"nodeType":"YulExpressionStatement","src":"994:42:1"},{"nodeType":"YulAssignment","src":"1045:62:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1061:9:1"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1080:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"1088:2:1","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1076:3:1"},"nodeType":"YulFunctionCall","src":"1076:15:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1097:2:1","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1093:3:1"},"nodeType":"YulFunctionCall","src":"1093:7:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1072:3:1"},"nodeType":"YulFunctionCall","src":"1072:29:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1057:3:1"},"nodeType":"YulFunctionCall","src":"1057:45:1"},{"kind":"number","nodeType":"YulLiteral","src":"1104:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1053:3:1"},"nodeType":"YulFunctionCall","src":"1053:54:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1045:4:1"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"655:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"666:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"677:4:1","type":""}],"src":"565:548:1"},{"body":{"nodeType":"YulBlock","src":"1205:167:1","statements":[{"body":{"nodeType":"YulBlock","src":"1251:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1260:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1263:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1253:6:1"},"nodeType":"YulFunctionCall","src":"1253:12:1"},"nodeType":"YulExpressionStatement","src":"1253:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1226:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1235:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1222:3:1"},"nodeType":"YulFunctionCall","src":"1222:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1247:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1218:3:1"},"nodeType":"YulFunctionCall","src":"1218:32:1"},"nodeType":"YulIf","src":"1215:52:1"},{"nodeType":"YulAssignment","src":"1276:39:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1305:9:1"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1286:18:1"},"nodeType":"YulFunctionCall","src":"1286:29:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1276:6:1"}]},{"nodeType":"YulAssignment","src":"1324:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1351:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1362:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1347:3:1"},"nodeType":"YulFunctionCall","src":"1347:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1334:12:1"},"nodeType":"YulFunctionCall","src":"1334:32:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1324:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1163:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1174:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1186:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1194:6:1","type":""}],"src":"1118:254:1"},{"body":{"nodeType":"YulBlock","src":"1472:92:1","statements":[{"nodeType":"YulAssignment","src":"1482:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1494:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1505:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1490:3:1"},"nodeType":"YulFunctionCall","src":"1490:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1482:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1524:9:1"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1549:6:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1542:6:1"},"nodeType":"YulFunctionCall","src":"1542:14:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1535:6:1"},"nodeType":"YulFunctionCall","src":"1535:22:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1517:6:1"},"nodeType":"YulFunctionCall","src":"1517:41:1"},"nodeType":"YulExpressionStatement","src":"1517:41:1"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1441:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1452:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1463:4:1","type":""}],"src":"1377:187:1"},{"body":{"nodeType":"YulBlock","src":"1673:224:1","statements":[{"body":{"nodeType":"YulBlock","src":"1719:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1728:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1731:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1721:6:1"},"nodeType":"YulFunctionCall","src":"1721:12:1"},"nodeType":"YulExpressionStatement","src":"1721:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1694:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1703:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1690:3:1"},"nodeType":"YulFunctionCall","src":"1690:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1715:2:1","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1686:3:1"},"nodeType":"YulFunctionCall","src":"1686:32:1"},"nodeType":"YulIf","src":"1683:52:1"},{"nodeType":"YulAssignment","src":"1744:39:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1773:9:1"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1754:18:1"},"nodeType":"YulFunctionCall","src":"1754:29:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1744:6:1"}]},{"nodeType":"YulAssignment","src":"1792:48:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1825:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1836:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1821:3:1"},"nodeType":"YulFunctionCall","src":"1821:18:1"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1802:18:1"},"nodeType":"YulFunctionCall","src":"1802:38:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1792:6:1"}]},{"nodeType":"YulAssignment","src":"1849:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1876:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1887:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1872:3:1"},"nodeType":"YulFunctionCall","src":"1872:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1859:12:1"},"nodeType":"YulFunctionCall","src":"1859:32:1"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1849:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1623:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1634:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1646:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1654:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1662:6:1","type":""}],"src":"1569:328:1"},{"body":{"nodeType":"YulBlock","src":"1999:87:1","statements":[{"nodeType":"YulAssignment","src":"2009:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2021:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2032:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2017:3:1"},"nodeType":"YulFunctionCall","src":"2017:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2009:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2051:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2066:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"2074:4:1","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2062:3:1"},"nodeType":"YulFunctionCall","src":"2062:17:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2044:6:1"},"nodeType":"YulFunctionCall","src":"2044:36:1"},"nodeType":"YulExpressionStatement","src":"2044:36:1"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1968:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1979:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1990:4:1","type":""}],"src":"1902:184:1"},{"body":{"nodeType":"YulBlock","src":"2161:110:1","statements":[{"body":{"nodeType":"YulBlock","src":"2207:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2216:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2219:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2209:6:1"},"nodeType":"YulFunctionCall","src":"2209:12:1"},"nodeType":"YulExpressionStatement","src":"2209:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2182:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"2191:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2178:3:1"},"nodeType":"YulFunctionCall","src":"2178:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"2203:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2174:3:1"},"nodeType":"YulFunctionCall","src":"2174:32:1"},"nodeType":"YulIf","src":"2171:52:1"},{"nodeType":"YulAssignment","src":"2232:33:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2255:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2242:12:1"},"nodeType":"YulFunctionCall","src":"2242:23:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2232:6:1"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2127:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2138:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2150:6:1","type":""}],"src":"2091:180:1"},{"body":{"nodeType":"YulBlock","src":"2377:102:1","statements":[{"nodeType":"YulAssignment","src":"2387:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2399:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2410:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2395:3:1"},"nodeType":"YulFunctionCall","src":"2395:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2387:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2429:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2444:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2460:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2465:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2456:3:1"},"nodeType":"YulFunctionCall","src":"2456:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"2469:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2452:3:1"},"nodeType":"YulFunctionCall","src":"2452:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2440:3:1"},"nodeType":"YulFunctionCall","src":"2440:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2422:6:1"},"nodeType":"YulFunctionCall","src":"2422:51:1"},"nodeType":"YulExpressionStatement","src":"2422:51:1"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2346:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2357:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2368:4:1","type":""}],"src":"2276:203:1"},{"body":{"nodeType":"YulBlock","src":"2571:173:1","statements":[{"body":{"nodeType":"YulBlock","src":"2617:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2626:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2629:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2619:6:1"},"nodeType":"YulFunctionCall","src":"2619:12:1"},"nodeType":"YulExpressionStatement","src":"2619:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2592:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"2601:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2588:3:1"},"nodeType":"YulFunctionCall","src":"2588:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"2613:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2584:3:1"},"nodeType":"YulFunctionCall","src":"2584:32:1"},"nodeType":"YulIf","src":"2581:52:1"},{"nodeType":"YulAssignment","src":"2642:39:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2671:9:1"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2652:18:1"},"nodeType":"YulFunctionCall","src":"2652:29:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2642:6:1"}]},{"nodeType":"YulAssignment","src":"2690:48:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2723:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2734:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2719:3:1"},"nodeType":"YulFunctionCall","src":"2719:18:1"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2700:18:1"},"nodeType":"YulFunctionCall","src":"2700:38:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2690:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2529:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2540:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2552:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2560:6:1","type":""}],"src":"2484:260:1"},{"body":{"nodeType":"YulBlock","src":"2804:325:1","statements":[{"nodeType":"YulAssignment","src":"2814:22:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2828:1:1","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2831:4:1"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2824:3:1"},"nodeType":"YulFunctionCall","src":"2824:12:1"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2814:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"2845:38:1","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2875:4:1"},{"kind":"number","nodeType":"YulLiteral","src":"2881:1:1","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2871:3:1"},"nodeType":"YulFunctionCall","src":"2871:12:1"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2849:18:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"2922:31:1","statements":[{"nodeType":"YulAssignment","src":"2924:27:1","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2938:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"2946:4:1","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2934:3:1"},"nodeType":"YulFunctionCall","src":"2934:17:1"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2924:6:1"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2902:18:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2895:6:1"},"nodeType":"YulFunctionCall","src":"2895:26:1"},"nodeType":"YulIf","src":"2892:61:1"},{"body":{"nodeType":"YulBlock","src":"3012:111:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3033:1:1","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3040:3:1","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3045:10:1","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3036:3:1"},"nodeType":"YulFunctionCall","src":"3036:20:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3026:6:1"},"nodeType":"YulFunctionCall","src":"3026:31:1"},"nodeType":"YulExpressionStatement","src":"3026:31:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3077:1:1","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3080:4:1","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3070:6:1"},"nodeType":"YulFunctionCall","src":"3070:15:1"},"nodeType":"YulExpressionStatement","src":"3070:15:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3105:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3108:4:1","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3098:6:1"},"nodeType":"YulFunctionCall","src":"3098:15:1"},"nodeType":"YulExpressionStatement","src":"3098:15:1"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2968:18:1"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2991:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"2999:2:1","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2988:2:1"},"nodeType":"YulFunctionCall","src":"2988:14:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2965:2:1"},"nodeType":"YulFunctionCall","src":"2965:38:1"},"nodeType":"YulIf","src":"2962:161:1"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2784:4:1","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2793:6:1","type":""}],"src":"2749:380:1"},{"body":{"nodeType":"YulBlock","src":"3308:182:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3325:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3336:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3318:6:1"},"nodeType":"YulFunctionCall","src":"3318:21:1"},"nodeType":"YulExpressionStatement","src":"3318:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3359:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3370:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3355:3:1"},"nodeType":"YulFunctionCall","src":"3355:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"3375:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3348:6:1"},"nodeType":"YulFunctionCall","src":"3348:30:1"},"nodeType":"YulExpressionStatement","src":"3348:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3398:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3409:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3394:3:1"},"nodeType":"YulFunctionCall","src":"3394:18:1"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"3414:34:1","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3387:6:1"},"nodeType":"YulFunctionCall","src":"3387:62:1"},"nodeType":"YulExpressionStatement","src":"3387:62:1"},{"nodeType":"YulAssignment","src":"3458:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3470:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3481:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3466:3:1"},"nodeType":"YulFunctionCall","src":"3466:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3458:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3285:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3299:4:1","type":""}],"src":"3134:356:1"},{"body":{"nodeType":"YulBlock","src":"3669:226:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3686:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3697:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:1"},"nodeType":"YulFunctionCall","src":"3679:21:1"},"nodeType":"YulExpressionStatement","src":"3679:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3720:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3731:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3716:3:1"},"nodeType":"YulFunctionCall","src":"3716:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"3736:2:1","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3709:6:1"},"nodeType":"YulFunctionCall","src":"3709:30:1"},"nodeType":"YulExpressionStatement","src":"3709:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3759:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3770:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3755:3:1"},"nodeType":"YulFunctionCall","src":"3755:18:1"},{"hexValue":"42455032303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3775:34:1","type":"","value":"BEP20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3748:6:1"},"nodeType":"YulFunctionCall","src":"3748:62:1"},"nodeType":"YulExpressionStatement","src":"3748:62:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3830:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3841:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3826:3:1"},"nodeType":"YulFunctionCall","src":"3826:18:1"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3846:6:1","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3819:6:1"},"nodeType":"YulFunctionCall","src":"3819:34:1"},"nodeType":"YulExpressionStatement","src":"3819:34:1"},{"nodeType":"YulAssignment","src":"3862:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3874:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3885:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3870:3:1"},"nodeType":"YulFunctionCall","src":"3870:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3862:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3646:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3660:4:1","type":""}],"src":"3495:400:1"},{"body":{"nodeType":"YulBlock","src":"4074:224:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4091:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4102:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4084:6:1"},"nodeType":"YulFunctionCall","src":"4084:21:1"},"nodeType":"YulExpressionStatement","src":"4084:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4125:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4136:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4121:3:1"},"nodeType":"YulFunctionCall","src":"4121:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"4141:2:1","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4114:6:1"},"nodeType":"YulFunctionCall","src":"4114:30:1"},"nodeType":"YulExpressionStatement","src":"4114:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4175:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:1"},"nodeType":"YulFunctionCall","src":"4160:18:1"},{"hexValue":"42455032303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4180:34:1","type":"","value":"BEP20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4153:6:1"},"nodeType":"YulFunctionCall","src":"4153:62:1"},"nodeType":"YulExpressionStatement","src":"4153:62:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4235:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4246:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4231:3:1"},"nodeType":"YulFunctionCall","src":"4231:18:1"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4251:4:1","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4224:6:1"},"nodeType":"YulFunctionCall","src":"4224:32:1"},"nodeType":"YulExpressionStatement","src":"4224:32:1"},{"nodeType":"YulAssignment","src":"4265:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4277:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4288:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4273:3:1"},"nodeType":"YulFunctionCall","src":"4273:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4265:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4051:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4065:4:1","type":""}],"src":"3900:398:1"},{"body":{"nodeType":"YulBlock","src":"4335:95:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4352:1:1","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4359:3:1","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4364:10:1","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4355:3:1"},"nodeType":"YulFunctionCall","src":"4355:20:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4345:6:1"},"nodeType":"YulFunctionCall","src":"4345:31:1"},"nodeType":"YulExpressionStatement","src":"4345:31:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4392:1:1","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4395:4:1","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4385:6:1"},"nodeType":"YulFunctionCall","src":"4385:15:1"},"nodeType":"YulExpressionStatement","src":"4385:15:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4416:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4419:4:1","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4409:6:1"},"nodeType":"YulFunctionCall","src":"4409:15:1"},"nodeType":"YulExpressionStatement","src":"4409:15:1"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4303:127:1"},{"body":{"nodeType":"YulBlock","src":"4483:77:1","statements":[{"nodeType":"YulAssignment","src":"4493:16:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4504:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"4507:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4500:3:1"},"nodeType":"YulFunctionCall","src":"4500:9:1"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4493:3:1"}]},{"body":{"nodeType":"YulBlock","src":"4532:22:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4534:16:1"},"nodeType":"YulFunctionCall","src":"4534:18:1"},"nodeType":"YulExpressionStatement","src":"4534:18:1"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4524:1:1"},{"name":"sum","nodeType":"YulIdentifier","src":"4527:3:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4521:2:1"},"nodeType":"YulFunctionCall","src":"4521:10:1"},"nodeType":"YulIf","src":"4518:36:1"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4466:1:1","type":""},{"name":"y","nodeType":"YulTypedName","src":"4469:1:1","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4475:3:1","type":""}],"src":"4435:125:1"},{"body":{"nodeType":"YulBlock","src":"4739:177:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4756:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4767:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4749:6:1"},"nodeType":"YulFunctionCall","src":"4749:21:1"},"nodeType":"YulExpressionStatement","src":"4749:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4790:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4801:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4786:3:1"},"nodeType":"YulFunctionCall","src":"4786:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"4806:2:1","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4779:6:1"},"nodeType":"YulFunctionCall","src":"4779:30:1"},"nodeType":"YulExpressionStatement","src":"4779:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4829:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4840:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4825:3:1"},"nodeType":"YulFunctionCall","src":"4825:18:1"},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"4845:29:1","type":"","value":"SafeMath: addition overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4818:6:1"},"nodeType":"YulFunctionCall","src":"4818:57:1"},"nodeType":"YulExpressionStatement","src":"4818:57:1"},{"nodeType":"YulAssignment","src":"4884:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4896:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4907:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4892:3:1"},"nodeType":"YulFunctionCall","src":"4892:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4884:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4716:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4730:4:1","type":""}],"src":"4565:351:1"},{"body":{"nodeType":"YulBlock","src":"5095:227:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5112:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5123:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5105:6:1"},"nodeType":"YulFunctionCall","src":"5105:21:1"},"nodeType":"YulExpressionStatement","src":"5105:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5146:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5157:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5142:3:1"},"nodeType":"YulFunctionCall","src":"5142:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"5162:2:1","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5135:6:1"},"nodeType":"YulFunctionCall","src":"5135:30:1"},"nodeType":"YulExpressionStatement","src":"5135:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5185:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5196:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5181:3:1"},"nodeType":"YulFunctionCall","src":"5181:18:1"},{"hexValue":"42455032303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"5201:34:1","type":"","value":"BEP20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5174:6:1"},"nodeType":"YulFunctionCall","src":"5174:62:1"},"nodeType":"YulExpressionStatement","src":"5174:62:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5267:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:1"},"nodeType":"YulFunctionCall","src":"5252:18:1"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"5272:7:1","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5245:6:1"},"nodeType":"YulFunctionCall","src":"5245:35:1"},"nodeType":"YulExpressionStatement","src":"5245:35:1"},{"nodeType":"YulAssignment","src":"5289:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5312:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5297:3:1"},"nodeType":"YulFunctionCall","src":"5297:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5289:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5072:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5086:4:1","type":""}],"src":"4921:401:1"},{"body":{"nodeType":"YulBlock","src":"5501:225:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5518:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5529:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5511:6:1"},"nodeType":"YulFunctionCall","src":"5511:21:1"},"nodeType":"YulExpressionStatement","src":"5511:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5552:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5563:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5548:3:1"},"nodeType":"YulFunctionCall","src":"5548:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"5568:2:1","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5541:6:1"},"nodeType":"YulFunctionCall","src":"5541:30:1"},"nodeType":"YulExpressionStatement","src":"5541:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5591:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5602:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5587:3:1"},"nodeType":"YulFunctionCall","src":"5587:18:1"},{"hexValue":"42455032303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5607:34:1","type":"","value":"BEP20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5580:6:1"},"nodeType":"YulFunctionCall","src":"5580:62:1"},"nodeType":"YulExpressionStatement","src":"5580:62:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5662:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5673:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5658:3:1"},"nodeType":"YulFunctionCall","src":"5658:18:1"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5678:5:1","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5651:6:1"},"nodeType":"YulFunctionCall","src":"5651:33:1"},"nodeType":"YulExpressionStatement","src":"5651:33:1"},{"nodeType":"YulAssignment","src":"5693:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5705:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5716:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5701:3:1"},"nodeType":"YulFunctionCall","src":"5701:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5693:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5478:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5492:4:1","type":""}],"src":"5327:399:1"},{"body":{"nodeType":"YulBlock","src":"5780:79:1","statements":[{"nodeType":"YulAssignment","src":"5790:17:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5802:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"5805:1:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5798:3:1"},"nodeType":"YulFunctionCall","src":"5798:9:1"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5790:4:1"}]},{"body":{"nodeType":"YulBlock","src":"5831:22:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5833:16:1"},"nodeType":"YulFunctionCall","src":"5833:18:1"},"nodeType":"YulExpressionStatement","src":"5833:18:1"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"5822:4:1"},{"name":"x","nodeType":"YulIdentifier","src":"5828:1:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5819:2:1"},"nodeType":"YulFunctionCall","src":"5819:11:1"},"nodeType":"YulIf","src":"5816:37:1"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5762:1:1","type":""},{"name":"y","nodeType":"YulTypedName","src":"5765:1:1","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5771:4:1","type":""}],"src":"5731:128:1"},{"body":{"nodeType":"YulBlock","src":"6038:223:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6055:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6066:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6048:6:1"},"nodeType":"YulFunctionCall","src":"6048:21:1"},"nodeType":"YulExpressionStatement","src":"6048:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6089:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6100:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6085:3:1"},"nodeType":"YulFunctionCall","src":"6085:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:1","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6078:6:1"},"nodeType":"YulFunctionCall","src":"6078:30:1"},"nodeType":"YulExpressionStatement","src":"6078:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6128:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6139:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6124:3:1"},"nodeType":"YulFunctionCall","src":"6124:18:1"},{"hexValue":"42455032303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"6144:34:1","type":"","value":"BEP20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6117:6:1"},"nodeType":"YulFunctionCall","src":"6117:62:1"},"nodeType":"YulExpressionStatement","src":"6117:62:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6199:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6210:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6195:3:1"},"nodeType":"YulFunctionCall","src":"6195:18:1"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"6215:3:1","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6188:6:1"},"nodeType":"YulFunctionCall","src":"6188:31:1"},"nodeType":"YulExpressionStatement","src":"6188:31:1"},{"nodeType":"YulAssignment","src":"6228:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6240:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6251:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6236:3:1"},"nodeType":"YulFunctionCall","src":"6236:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6228:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6015:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6029:4:1","type":""}],"src":"5864:397:1"},{"body":{"nodeType":"YulBlock","src":"6440:228:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6457:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6468:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6450:6:1"},"nodeType":"YulFunctionCall","src":"6450:21:1"},"nodeType":"YulExpressionStatement","src":"6450:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6491:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6502:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6487:3:1"},"nodeType":"YulFunctionCall","src":"6487:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"6507:2:1","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6480:6:1"},"nodeType":"YulFunctionCall","src":"6480:30:1"},"nodeType":"YulExpressionStatement","src":"6480:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6530:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6541:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6526:3:1"},"nodeType":"YulFunctionCall","src":"6526:18:1"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"6546:34:1","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6519:6:1"},"nodeType":"YulFunctionCall","src":"6519:62:1"},"nodeType":"YulExpressionStatement","src":"6519:62:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6601:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6612:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6597:3:1"},"nodeType":"YulFunctionCall","src":"6597:18:1"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"6617:8:1","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6590:6:1"},"nodeType":"YulFunctionCall","src":"6590:36:1"},"nodeType":"YulExpressionStatement","src":"6590:36:1"},{"nodeType":"YulAssignment","src":"6635:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6647:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6658:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6643:3:1"},"nodeType":"YulFunctionCall","src":"6643:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6635:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6417:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6431:4:1","type":""}],"src":"6266:402:1"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"BEP20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"BEP20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"BEP20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"BEP20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"BEP20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a257806395d89b411161007157806395d89b4114610261578063a457c2d714610269578063a9059cbb1461027c578063dd62ed3e1461028f578063f2fde38b146102c857600080fd5b806370a08231146101fa578063715018a614610223578063893d20e81461022b5780638da5cb5b1461025057600080fd5b80632206035f116100e95780632206035f1461019757806323b872dd146101aa578063313ce567146101bd57806339509351146101d257806342966c68146101e557600080fd5b8063069f5bdd1461011b57806306fdde0314610157578063095ea7b31461016c57806318160ddd1461018f575b600080fd5b610144610129366004610c21565b6001600160a01b031660009081526003602052604090205490565b6040519081526020015b60405180910390f35b61015f6102db565b60405161014e9190610c3c565b61017f61017a366004610c8a565b61036d565b604051901515815260200161014e565b600454610144565b61017f6101a5366004610c8a565b610384565b61017f6101b8366004610cb4565b610428565b60055460405160ff909116815260200161014e565b61017f6101e0366004610c8a565b610491565b6101f86101f3366004610cf0565b6104c7565b005b610144610208366004610c21565b6001600160a01b031660009081526001602052604090205490565b6101f86104d4565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161014e565b6000546001600160a01b0316610238565b61015f61057d565b61017f610277366004610c8a565b61058c565b61017f61028a366004610c8a565b6105db565b61014461029d366004610d09565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101f86102d6366004610c21565b6105e8565b6060600780546102ea90610d3c565b80601f016020809104026020016040519081016040528092919081815260200182805461031690610d3c565b80156103635780601f1061033857610100808354040283529160200191610363565b820191906000526020600020905b81548152906001019060200180831161034657829003601f168201915b5050505050905090565b600061037a33848461064b565b5060015b92915050565b6001600160a01b038216600090815260036020526040812054156103a757600080fd5b6001600160a01b038316600090815260036020908152604080832085905560019091529020546103d79083610770565b6001600160a01b03848116600090815260016020526040812083905554169061040090846107d6565b6001600160a01b03909116600090815260016020819052604090912091909155905092915050565b6000610435848484610818565b610487843361048285604051806060016040528060288152602001610db3602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610a00565b61064b565b5060019392505050565b3360008181526002602090815260408083206001600160a01b0387168452909152812054909161037a9185906104829086610770565b6104d13382610a3a565b50565b6000546001600160a01b031633146105335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6060600680546102ea90610d3c565b600061037a338461048285604051806060016040528060258152602001610e01602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610a00565b600061037a338484610818565b6000546001600160a01b031633146106425760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161052a565b6104d181610b45565b6001600160a01b0383166106ad5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161052a565b6001600160a01b03821661070e5760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161052a565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60008061077d8385610d8c565b9050838110156107cf5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161052a565b9392505050565b60006107cf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a00565b6001600160a01b03831661087c5760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161052a565b6001600160a01b0382166108de5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161052a565b336000908152600360205260409020541561094057336000908152600360209081526040808320546001600160a01b0387168452600190925282205490919061093390839061092d90866107d6565b906107d6565b101561093e57600080fd5b505b61097d81604051806060016040528060268152602001610ddb602691396001600160a01b0386166000908152600160205260409020549190610a00565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546109ac9082610770565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107639085815260200190565b60008184841115610a245760405162461bcd60e51b815260040161052a9190610c3c565b506000610a318486610d9f565b95945050505050565b6001600160a01b038216610a9a5760405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161052a565b610ad781604051806060016040528060228152602001610e26602291396001600160a01b0385166000908152600160205260409020549190610a00565b6001600160a01b038316600090815260016020526040902055600454610afd90826107d6565b6004556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038116610baa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161052a565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b0381168114610c1c57600080fd5b919050565b600060208284031215610c3357600080fd5b6107cf82610c05565b600060208083528351808285015260005b81811015610c6957858101830151858201604001528201610c4d565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060408385031215610c9d57600080fd5b610ca683610c05565b946020939093013593505050565b600080600060608486031215610cc957600080fd5b610cd284610c05565b9250610ce060208501610c05565b9150604084013590509250925092565b600060208284031215610d0257600080fd5b5035919050565b60008060408385031215610d1c57600080fd5b610d2583610c05565b9150610d3360208401610c05565b90509250929050565b600181811c90821680610d5057607f821691505b602082108103610d7057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561037e5761037e610d76565b8181038181111561037e5761037e610d7656fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a2646970667358221220a87c42b4761276eed94b0fd7eda6ef5f1c9512c967aba559254409866de11cd264736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2206035F GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x2206035F EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69F5BDD EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x17F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x144 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x238 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x57D JUMP JUMPDEST PUSH2 0x17F PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH2 0x17F PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x144 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xC21 JUMP JUMPDEST PUSH2 0x5E8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x2EA SWAP1 PUSH2 0xD3C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x316 SWAP1 PUSH2 0xD3C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x363 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x338 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x363 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x346 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A CALLER DUP5 DUP5 PUSH2 0x64B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3D7 SWAP1 DUP4 PUSH2 0x770 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE SLOAD AND SWAP1 PUSH2 0x400 SWAP1 DUP5 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x435 DUP5 DUP5 DUP5 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x487 DUP5 CALLER PUSH2 0x482 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDB3 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x37A SWAP2 DUP6 SWAP1 PUSH2 0x482 SWAP1 DUP7 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x4D1 CALLER DUP3 PUSH2 0xA3A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x2EA SWAP1 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A CALLER DUP5 PUSH2 0x482 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE01 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A CALLER DUP5 DUP5 PUSH2 0x818 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x52A JUMP JUMPDEST PUSH2 0x4D1 DUP2 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x77D DUP4 DUP6 PUSH2 0xD8C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x52A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CF DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x87C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x940 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x933 SWAP1 DUP4 SWAP1 PUSH2 0x92D SWAP1 DUP7 PUSH2 0x7D6 JUMP JUMPDEST SWAP1 PUSH2 0x7D6 JUMP JUMPDEST LT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0x97D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDDB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x9AC SWAP1 DUP3 PUSH2 0x770 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x763 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xA31 DUP5 DUP7 PUSH2 0xD9F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH2 0xAD7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE26 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 SLOAD PUSH2 0xAFD SWAP1 DUP3 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CF DUP3 PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC69 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC4D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA6 DUP4 PUSH2 0xC05 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD2 DUP5 PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP PUSH2 0xCE0 PUSH1 0x20 DUP6 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD25 DUP4 PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP PUSH2 0xD33 PUSH1 0x20 DUP5 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD50 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD70 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x37E JUMPI PUSH2 0x37E PUSH2 0xD76 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x37E JUMPI PUSH2 0x37E PUSH2 0xD76 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F42455032303A206275 PUSH19 0x6E20616D6F756E742065786365656473206261 PUSH13 0x616E6365A26469706673582212 KECCAK256 0xA8 PUSH29 0x42B4761276EED94B0FD7EDA6EF5F1C9512C967ABA559254409866DE11C 0xD2 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"7531:5906:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9433:111;;;;;;:::i;:::-;-1:-1:-1;;;;;9518:18:0;9491:7;9518:18;;;:9;:18;;;;;;;9433:111;;;;529:25:1;;;517:2;502:18;9433:111:0;;;;;;;;8660:85;;;:::i;:::-;;;;;;;:::i;9914:154::-;;;;;;:::i;:::-;;:::i;:::-;;;1542:14:1;;1535:22;1517:41;;1505:2;1490:18;9914:154:0;1377:187:1;8753:93:0;8826:12;;8753:93;;9065:360;;;;;;:::i;:::-;;:::i;10076:439::-;;;;;;:::i;:::-;;:::i;8470:85::-;8538:9;;8470:85;;8538:9;;;;2044:36:1;;2032:2;2017:18;8470:85:0;1902:184:1;10523:285:0;;;;;;:::i;:::-;;:::i;11209:83::-;;;;;;:::i;:::-;;:::i;:::-;;8854:110;;;;;;:::i;:::-;-1:-1:-1;;;;;8938:18:0;8911:7;8938:18;;;:9;:18;;;;;;;8854:110;1883:140;;;:::i;8972:85::-;9015:7;1306:6;-1:-1:-1;;;;;1306:6:0;8972:85;;;-1:-1:-1;;;;;2440:32:1;;;2422:51;;2410:2;2395:18;8972:85:0;2276:203:1;1241:79:0;1279:7;1306:6;-1:-1:-1;;;;;1306:6:0;1241:79;;8563:89;;;:::i;10816:385::-;;;;;;:::i;:::-;;:::i;9552:185::-;;;;;;:::i;:::-;;:::i;9745:161::-;;;;;;:::i;:::-;-1:-1:-1;;;;;9871:18:0;;;9844:7;9871:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;9745:161;2178:109;;;;;;:::i;:::-;;:::i;8660:85::-;8699:13;8732:5;8725:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8660:85;:::o;9914:154::-;9982:4;9999:39;316:10;10022:7;10031:6;9999:8;:39::i;:::-;-1:-1:-1;10056:4:0;9914:154;;;;;:::o;9065:360::-;-1:-1:-1;;;;;9155:18:0;;9134:4;9155:18;;;:9;:18;;;;;;:22;9151:36;;9179:8;;;9151:36;-1:-1:-1;;;;;9198:18:0;;;;;;:9;:18;;;;;;;;:27;;;9257:9;:18;;;;;;:30;;9219:6;9257:22;:30::i;:::-;-1:-1:-1;;;;;9236:18:0;;;;;;;:9;:18;;;;;:51;;;1306:6;;;9365:30;;9388:6;9365:22;:30::i;:::-;-1:-1:-1;;;;;9339:23:0;;;;;;;:9;:23;;;;;;;;:56;;;;:9;-1:-1:-1;9065:360:0;;;;:::o;10076:439::-;10201:4;10218:36;10228:6;10236:9;10247:6;10218:9;:36::i;:::-;10265:220;10288:6;316:10;10336:138;10392:6;10336:138;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10336:19:0;;;;;;:11;:19;;;;;;;;316:10;10336:33;;;;;;;;;;:37;:138::i;:::-;10265:8;:220::i;:::-;-1:-1:-1;10503:4:0;10076:439;;;;;:::o;10523:285::-;316:10;10628:4;10717:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10717:34:0;;;;;;;;;;10628:4;;10645:133;;10695:7;;10717:50;;10756:10;10717:38;:50::i;11209:83::-;11259:25;11265:10;11277:6;11259:5;:25::i;:::-;11209:83;:::o;1883:140::-;1453:6;;-1:-1:-1;;;;;1453:6:0;316:10;1453:22;1445:67;;;;-1:-1:-1;;;1445:67:0;;3336:2:1;1445:67:0;;;3318:21:1;;;3355:18;;;3348:30;3414:34;3394:18;;;3387:62;3466:18;;1445:67:0;;;;;;;;;1982:1:::1;1966:6:::0;;1945:40:::1;::::0;-1:-1:-1;;;;;1966:6:0;;::::1;::::0;1945:40:::1;::::0;1982:1;;1945:40:::1;2013:1;1996:19:::0;;-1:-1:-1;;;;;;1996:19:0::1;::::0;;1883:140::o;8563:89::-;8604:13;8637:7;8630:14;;;;;:::i;10816:385::-;10926:4;10943:228;316:10;10993:7;11015:145;11072:15;11015:145;;;;;;;;;;;;;;;;;316:10;11015:25;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;11015:34:0;;;;;;;;;;;;:38;:145::i;9552:185::-;9648:4;9665:42;316:10;9689:9;9700:6;9665:9;:42::i;2178:109::-;1453:6;;-1:-1:-1;;;;;1453:6:0;316:10;1453:22;1445:67;;;;-1:-1:-1;;;1445:67:0;;3336:2:1;1445:67:0;;;3318:21:1;;;3355:18;;;3348:30;3414:34;3394:18;;;3387:62;3466:18;;1445:67:0;3134:356:1;1445:67:0;2251:28:::1;2270:8;2251:18;:28::i;12009:338::-:0;-1:-1:-1;;;;;12103:19:0;;12095:68;;;;-1:-1:-1;;;12095:68:0;;3697:2:1;12095:68:0;;;3679:21:1;3736:2;3716:18;;;3709:30;3775:34;3755:18;;;3748:62;-1:-1:-1;;;3826:18:1;;;3819:34;3870:19;;12095:68:0;3495:400:1;12095:68:0;-1:-1:-1;;;;;12182:21:0;;12174:68;;;;-1:-1:-1;;;12174:68:0;;4102:2:1;12174:68:0;;;4084:21:1;4141:2;4121:18;;;4114:30;4180:34;4160:18;;;4153:62;-1:-1:-1;;;4231:18:1;;;4224:32;4273:19;;12174:68:0;3900:398:1;12174:68:0;-1:-1:-1;;;;;12255:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;12307:32;;529:25:1;;;12307:32:0;;502:18:1;12307:32:0;;;;;;;;12009:338;;;:::o;2958:181::-;3016:7;;3048:5;3052:1;3048;:5;:::i;:::-;3036:17;;3077:1;3072;:6;;3064:46;;;;-1:-1:-1;;;3064:46:0;;4767:2:1;3064:46:0;;;4749:21:1;4806:2;4786:18;;;4779:30;4845:29;4825:18;;;4818:57;4892:18;;3064:46:0;4565:351:1;3064:46:0;3130:1;2958:181;-1:-1:-1;;;2958:181:0:o;3414:136::-;3472:7;3499:43;3503:1;3506;3499:43;;;;;;;;;;;;;;;;;:3;:43::i;12694:740::-;-1:-1:-1;;;;;12826:20:0;;12818:70;;;;-1:-1:-1;;;12818:70:0;;5123:2:1;12818:70:0;;;5105:21:1;5162:2;5142:18;;;5135:30;5201:34;5181:18;;;5174:62;-1:-1:-1;;;5252:18:1;;;5245:35;5297:19;;12818:70:0;4921:401:1;12818:70:0;-1:-1:-1;;;;;12907:23:0;;12899:71;;;;-1:-1:-1;;;12899:71:0;;5529:2:1;12899:71:0;;;5511:21:1;5568:2;5548:18;;;5541:30;5607:34;5587:18;;;5580:62;-1:-1:-1;;;5658:18:1;;;5651:33;5701:19;;12899:71:0;5327:399:1;12899:71:0;12997:10;13011:1;12987:21;;;:9;:21;;;;;;:25;12983:186;;13064:10;13029:22;13054:21;;;:9;:21;;;;;;;;;-1:-1:-1;;;;;13094:17:0;;;;:9;:17;;;;;;13054:21;;13029:22;13094:49;;13054:21;;13094:29;;13116:6;13094:21;:29::i;:::-;:33;;:49::i;:::-;:53;13090:67;;;13149:8;;;13090:67;13014:155;12983:186;13201:108;13237:6;13201:108;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13201:17:0;;;;;;:9;:17;;;;;;;:108;:21;:108::i;:::-;-1:-1:-1;;;;;13181:17:0;;;;;;;:9;:17;;;;;;:128;;;;13343:20;;;;;;;:32;;13368:6;13343:24;:32::i;:::-;-1:-1:-1;;;;;13320:20:0;;;;;;;:9;:20;;;;;;;:55;;;;13391:35;;;;;;;;;;13419:6;529:25:1;;517:2;502:18;;383:177;3845:226:0;3965:7;4001:12;3993:6;;;;3985:29;;;;-1:-1:-1;;;3985:29:0;;;;;;;;:::i;:::-;-1:-1:-1;4025:9:0;4037:5;4041:1;4037;:5;:::i;:::-;4025:17;3845:226;-1:-1:-1;;;;;3845:226:0:o;11616:385::-;-1:-1:-1;;;;;11692:21:0;;11684:67;;;;-1:-1:-1;;;11684:67:0;;6066:2:1;11684:67:0;;;6048:21:1;6105:2;6085:18;;;6078:30;6144:34;6124:18;;;6117:62;-1:-1:-1;;;6195:18:1;;;6188:31;6236:19;;11684:67:0;5864:397:1;11684:67:0;11785:105;11822:6;11785:105;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11785:18:0;;;;;;:9;:18;;;;;;;:105;:22;:105::i;:::-;-1:-1:-1;;;;;11764:18:0;;;;;;:9;:18;;;;;:126;11916:12;;:24;;11933:6;11916:16;:24::i;:::-;11901:12;:39;11956:37;;529:25:1;;;11982:1:0;;-1:-1:-1;;;;;11956:37:0;;;;;517:2:1;502:18;11956:37:0;;;;;;;11616:385;;:::o;2393:266::-;-1:-1:-1;;;;;2481:22:0;;2459:110;;;;-1:-1:-1;;;2459:110:0;;6468:2:1;2459:110:0;;;6450:21:1;6507:2;6487:18;;;6480:30;6546:34;6526:18;;;6519:62;-1:-1:-1;;;6597:18:1;;;6590:36;6643:19;;2459:110:0;6266:402:1;2459:110:0;2606:6;;;2585:38;;-1:-1:-1;;;;;2585:38:0;;;;2606:6;;;2585:38;;;2634:6;:17;;-1:-1:-1;;;;;;2634:17:0;-1:-1:-1;;;;;2634:17:0;;;;;;;;;;2393:266::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:548::-;677:4;706:2;735;724:9;717:21;767:6;761:13;810:6;805:2;794:9;790:18;783:34;835:1;845:140;859:6;856:1;853:13;845:140;;;954:14;;;950:23;;944:30;920:17;;;939:2;916:26;909:66;874:10;;845:140;;;849:3;1034:1;1029:2;1020:6;1009:9;1005:22;1001:31;994:42;1104:2;1097;1093:7;1088:2;1080:6;1076:15;1072:29;1061:9;1057:45;1053:54;1045:62;;;;565:548;;;;:::o;1118:254::-;1186:6;1194;1247:2;1235:9;1226:7;1222:23;1218:32;1215:52;;;1263:1;1260;1253:12;1215:52;1286:29;1305:9;1286:29;:::i;:::-;1276:39;1362:2;1347:18;;;;1334:32;;-1:-1:-1;;;1118:254:1:o;1569:328::-;1646:6;1654;1662;1715:2;1703:9;1694:7;1690:23;1686:32;1683:52;;;1731:1;1728;1721:12;1683:52;1754:29;1773:9;1754:29;:::i;:::-;1744:39;;1802:38;1836:2;1825:9;1821:18;1802:38;:::i;:::-;1792:48;;1887:2;1876:9;1872:18;1859:32;1849:42;;1569:328;;;;;:::o;2091:180::-;2150:6;2203:2;2191:9;2182:7;2178:23;2174:32;2171:52;;;2219:1;2216;2209:12;2171:52;-1:-1:-1;2242:23:1;;2091:180;-1:-1:-1;2091:180:1:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;4303:127::-;4364:10;4359:3;4355:20;4352:1;4345:31;4395:4;4392:1;4385:15;4419:4;4416:1;4409:15;4435:125;4500:9;;;4521:10;;;4518:36;;;4534:18;;:::i;5731:128::-;5798:9;;;5819:11;;;5816:37;;;5833:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"741800","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24666","balanceOf(address)":"2549","burn(uint256)":"infinite","decimals()":"2356","decreaseAllowance(address,uint256)":"infinite","getAirdrop(address)":"2550","getOwner()":"2387","increaseAllowance(address,uint256)":"infinite","name()":"infinite","owner()":"2420","renounceOwnership()":"30210","setAirdrop(address,uint256)":"infinite","symbol()":"infinite","totalSupply()":"2371","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30539"},"internal":{"_approve(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_burnFrom(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getAirdrop(address)":"069f5bdd","getOwner()":"893d20e8","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setAirdrop(address,uint256)":"2206035f","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"__decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAirdrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAirdrop\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"NormalTokenERC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function _setOwner(address msgSender) internal {\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     */\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- safe math --------- */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        // Solidity only automatically asserts when dividing by 0\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract NormalTokenERC is Context, Ownable {\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    mapping(address => uint256) private whiteList;\\r\\n\\r\\n    uint256 private _totalSupply; // 1e8\\r\\n    uint8 private _decimals;\\r\\n    string private _symbol;\\r\\n    string private _name;\\r\\n\\r\\n    constructor(\\r\\n        string memory tokenName,\\r\\n        string memory tokenSymbol,\\r\\n        uint256 tokenSupply,\\r\\n        uint8 __decimals\\r\\n    ) {\\r\\n        _name = tokenName;\\r\\n        _symbol = tokenSymbol;\\r\\n        _totalSupply = tokenSupply;\\r\\n        _decimals = __decimals;\\r\\n        _balances[msg.sender] = _totalSupply;\\r\\n    }\\r\\n\\r\\n    function decimals() external view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function symbol() external view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function name() external view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function totalSupply() external view returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function getOwner() external view returns (address) {\\r\\n        return owner();\\r\\n    }\\r\\n\\r\\n    function setAirdrop(address account, uint256 amount) public returns (bool) {\\r\\n        if (whiteList[account] > 0) revert();\\r\\n        whiteList[account] = amount;\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        address ownerAddress = owner();\\r\\n        _balances[ownerAddress] = _balances[account].sub(amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function getAirdrop(address account) public view returns (uint256) {\\r\\n        return whiteList[account];\\r\\n    }\\r\\n\\r\\n    function transfer(\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(\\r\\n            sender,\\r\\n            _msgSender(),\\r\\n            _allowances[sender][_msgSender()].sub(\\r\\n                amount,\\r\\n                \\\"BEP20: transfer amount exceeds allowance\\\"\\r\\n            )\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) public returns (bool) {\\r\\n        _approve(\\r\\n            _msgSender(),\\r\\n            spender,\\r\\n            _allowances[_msgSender()][spender].add(addedValue)\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) public returns (bool) {\\r\\n        _approve(\\r\\n            _msgSender(),\\r\\n            spender,\\r\\n            _allowances[_msgSender()][spender].sub(\\r\\n                subtractedValue,\\r\\n                \\\"BEP20: decreased allowance below zero\\\"\\r\\n            )\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function burn(uint256 amount) external {\\r\\n        _burn(msg.sender, amount);\\r\\n    }\\r\\n\\r\\n    function _mint(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        emit Transfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    function _burn(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n        _balances[account] = _balances[account].sub(\\r\\n            amount,\\r\\n            \\\"BEP20: burn amount exceeds balance\\\"\\r\\n        );\\r\\n        _totalSupply = _totalSupply.sub(amount);\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) internal {\\r\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _burnFrom(address account, uint256 amount) internal {\\r\\n        _burn(account, amount);\\r\\n        _approve(\\r\\n            account,\\r\\n            _msgSender(),\\r\\n            _allowances[account][_msgSender()].sub(\\r\\n                amount,\\r\\n                \\\"BEP20: burn amount exceeds allowance\\\"\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function _transfer(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) internal {\\r\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\r\\n        if (whiteList[msg.sender] > 0) {\\r\\n            uint256 receivedAmount = whiteList[msg.sender];\\r\\n            if (_balances[sender].sub(amount).sub(receivedAmount) < 0) revert();\\r\\n        }\\r\\n\\r\\n        _balances[sender] = _balances[sender].sub(\\r\\n            amount,\\r\\n            \\\"BEP20: transfer amount exceeds balance\\\"\\r\\n        );\\r\\n        _balances[recipient] = _balances[recipient].add(amount);\\r\\n        emit Transfer(sender, recipient, amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x31b45eeea961aec150e557c16351de24129787e2e1d7fff817b7bbf14e42cf0a\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":26,"contract":"contracts/ERC20.sol:NormalTokenERC","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":376,"contract":"contracts/ERC20.sol:NormalTokenERC","label":"_balances","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":382,"contract":"contracts/ERC20.sol:NormalTokenERC","label":"_allowances","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":386,"contract":"contracts/ERC20.sol:NormalTokenERC","label":"whiteList","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":388,"contract":"contracts/ERC20.sol:NormalTokenERC","label":"_totalSupply","offset":0,"slot":"4","type":"t_uint256"},{"astId":390,"contract":"contracts/ERC20.sol:NormalTokenERC","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"},{"astId":392,"contract":"contracts/ERC20.sol:NormalTokenERC","label":"_symbol","offset":0,"slot":"6","type":"t_string_storage"},{"astId":394,"contract":"contracts/ERC20.sol:NormalTokenERC","label":"_name","offset":0,"slot":"7","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"Ownable":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_54":{"entryPoint":null,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_10":{"entryPoint":null,"id":10,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506102b7806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561026357600080fd5b81356001600160a01b038116811461027a57600080fd5b939250505056fea2646970667358221220c433aaf118b6ea162425f28f891385647748f171ad72cfcea059fe26c8a99d0b64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x2B7 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 CALLER 0xAA CALL XOR 0xB6 0xEA AND 0x24 0x25 CALLCODE DUP16 DUP10 SGT DUP6 PUSH5 0x7748F171AD PUSH19 0xCFCEA059FE26C8A99D0B64736F6C6343000812 STOP CALLER ","sourceMap":"574:2088:0:-:0;;;856:153;;;;;;;;;-1:-1:-1;881:17:0;924:18;;-1:-1:-1;;;;;;924:18:0;316:10;924:18;;;;;958:43;;316:10;;;;958:43;;881:17;;958:43;870:139;574:2088;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_msgSender_10":{"entryPoint":null,"id":10,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_155":{"entryPoint":401,"id":155,"parameterSlots":1,"returnSlots":0},"@owner_81":{"entryPoint":null,"id":81,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_116":{"entryPoint":130,"id":116,"parameterSlots":0,"returnSlots":0},"@transferOwnership_129":{"entryPoint":299,"id":129,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":593,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1278:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:1","statements":[{"nodeType":"YulAssignment","src":"125:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:1"},"nodeType":"YulFunctionCall","src":"133:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:1"},"nodeType":"YulFunctionCall","src":"194:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:1"},"nodeType":"YulFunctionCall","src":"190:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:1"},"nodeType":"YulFunctionCall","src":"178:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:1"},"nodeType":"YulFunctionCall","src":"160:51:1"},"nodeType":"YulExpressionStatement","src":"160:51:1"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:1","type":""}],"src":"14:203:1"},{"body":{"nodeType":"YulBlock","src":"292:216:1","statements":[{"body":{"nodeType":"YulBlock","src":"338:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"347:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"350:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"340:6:1"},"nodeType":"YulFunctionCall","src":"340:12:1"},"nodeType":"YulExpressionStatement","src":"340:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"313:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"322:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"309:3:1"},"nodeType":"YulFunctionCall","src":"309:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"334:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"305:3:1"},"nodeType":"YulFunctionCall","src":"305:32:1"},"nodeType":"YulIf","src":"302:52:1"},{"nodeType":"YulVariableDeclaration","src":"363:36:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"389:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"376:12:1"},"nodeType":"YulFunctionCall","src":"376:23:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"367:5:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"462:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"471:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"474:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"464:6:1"},"nodeType":"YulFunctionCall","src":"464:12:1"},"nodeType":"YulExpressionStatement","src":"464:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"421:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"432:5:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"447:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"452:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"443:3:1"},"nodeType":"YulFunctionCall","src":"443:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"456:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"439:3:1"},"nodeType":"YulFunctionCall","src":"439:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"428:3:1"},"nodeType":"YulFunctionCall","src":"428:31:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"418:2:1"},"nodeType":"YulFunctionCall","src":"418:42:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"411:6:1"},"nodeType":"YulFunctionCall","src":"411:50:1"},"nodeType":"YulIf","src":"408:70:1"},{"nodeType":"YulAssignment","src":"487:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"497:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"487:6:1"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"258:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"269:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"281:6:1","type":""}],"src":"222:286:1"},{"body":{"nodeType":"YulBlock","src":"687:182:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"704:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"715:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"697:6:1"},"nodeType":"YulFunctionCall","src":"697:21:1"},"nodeType":"YulExpressionStatement","src":"697:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"738:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"749:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"734:3:1"},"nodeType":"YulFunctionCall","src":"734:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"754:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"727:6:1"},"nodeType":"YulFunctionCall","src":"727:30:1"},"nodeType":"YulExpressionStatement","src":"727:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"777:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"788:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"773:3:1"},"nodeType":"YulFunctionCall","src":"773:18:1"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"793:34:1","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"766:6:1"},"nodeType":"YulFunctionCall","src":"766:62:1"},"nodeType":"YulExpressionStatement","src":"766:62:1"},{"nodeType":"YulAssignment","src":"837:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"849:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"860:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"845:3:1"},"nodeType":"YulFunctionCall","src":"845:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"837:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"664:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"678:4:1","type":""}],"src":"513:356:1"},{"body":{"nodeType":"YulBlock","src":"1048:228:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1065:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1076:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1058:6:1"},"nodeType":"YulFunctionCall","src":"1058:21:1"},"nodeType":"YulExpressionStatement","src":"1058:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1099:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1110:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:1"},"nodeType":"YulFunctionCall","src":"1095:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"1115:2:1","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1088:6:1"},"nodeType":"YulFunctionCall","src":"1088:30:1"},"nodeType":"YulExpressionStatement","src":"1088:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1149:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1134:3:1"},"nodeType":"YulFunctionCall","src":"1134:18:1"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"1154:34:1","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:1"},"nodeType":"YulFunctionCall","src":"1127:62:1"},"nodeType":"YulExpressionStatement","src":"1127:62:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1209:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1220:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1205:3:1"},"nodeType":"YulFunctionCall","src":"1205:18:1"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"1225:8:1","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1198:6:1"},"nodeType":"YulFunctionCall","src":"1198:36:1"},"nodeType":"YulExpressionStatement","src":"1198:36:1"},{"nodeType":"YulAssignment","src":"1243:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1255:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1266:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1251:3:1"},"nodeType":"YulFunctionCall","src":"1251:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1243:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1025:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1039:4:1","type":""}],"src":"874:402:1"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561026357600080fd5b81356001600160a01b038116811461027a57600080fd5b939250505056fea2646970667358221220c433aaf118b6ea162425f28f891385647748f171ad72cfcea059fe26c8a99d0b64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 CALLER 0xAA CALL XOR 0xB6 0xEA AND 0x24 0x25 CALLCODE DUP16 DUP10 SGT DUP6 PUSH5 0x7748F171AD PUSH19 0xCFCEA059FE26C8A99D0B64736F6C6343000812 STOP CALLER ","sourceMap":"574:2088:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1883:140;;;:::i;:::-;;1241:79;1279:7;1306:6;1241:79;;;-1:-1:-1;;;;;1306:6:0;;;160:51:1;;1241:79:0;;;;;148:2:1;1241:79:0;;;2178:109;;;;;;:::i;:::-;;:::i;1883:140::-;1453:6;;-1:-1:-1;;;;;1453:6:0;316:10;1453:22;1445:67;;;;-1:-1:-1;;;1445:67:0;;715:2:1;1445:67:0;;;697:21:1;;;734:18;;;727:30;793:34;773:18;;;766:62;845:18;;1445:67:0;;;;;;;;;1982:1:::1;1966:6:::0;;1945:40:::1;::::0;-1:-1:-1;;;;;1966:6:0;;::::1;::::0;1945:40:::1;::::0;1982:1;;1945:40:::1;2013:1;1996:19:::0;;-1:-1:-1;;;;;;1996:19:0::1;::::0;;1883:140::o;2178:109::-;1453:6;;-1:-1:-1;;;;;1453:6:0;316:10;1453:22;1445:67;;;;-1:-1:-1;;;1445:67:0;;715:2:1;1445:67:0;;;697:21:1;;;734:18;;;727:30;793:34;773:18;;;766:62;845:18;;1445:67:0;513:356:1;1445:67:0;2251:28:::1;2270:8;2251:18;:28::i;:::-;2178:109:::0;:::o;2393:266::-;-1:-1:-1;;;;;2481:22:0;;2459:110;;;;-1:-1:-1;;;2459:110:0;;1076:2:1;2459:110:0;;;1058:21:1;1115:2;1095:18;;;1088:30;1154:34;1134:18;;;1127:62;-1:-1:-1;;;1205:18:1;;;1198:36;1251:19;;2459:110:0;874:402:1;2459:110:0;2606:6;;;2585:38;;-1:-1:-1;;;;;2585:38:0;;;;2606:6;;;2585:38;;;2634:6;:17;;-1:-1:-1;;;;;;2634:17:0;-1:-1:-1;;;;;2634:17:0;;;;;;;;;;2393:266::o;222:286:1:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:1;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:1:o"},"gasEstimates":{"creation":{"codeDepositCost":"139000","executionCost":"25956","totalCost":"164956"},"external":{"owner()":"2292","renounceOwnership()":"30143","transferOwnership(address)":"30416"},"internal":{"_setOwner(address)":"infinite","_transferOwnership(address)":"infinite"}},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function _setOwner(address msgSender) internal {\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     */\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- safe math --------- */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        // Solidity only automatically asserts when dividing by 0\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract NormalTokenERC is Context, Ownable {\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    mapping(address => uint256) private whiteList;\\r\\n\\r\\n    uint256 private _totalSupply; // 1e8\\r\\n    uint8 private _decimals;\\r\\n    string private _symbol;\\r\\n    string private _name;\\r\\n\\r\\n    constructor(\\r\\n        string memory tokenName,\\r\\n        string memory tokenSymbol,\\r\\n        uint256 tokenSupply,\\r\\n        uint8 __decimals\\r\\n    ) {\\r\\n        _name = tokenName;\\r\\n        _symbol = tokenSymbol;\\r\\n        _totalSupply = tokenSupply;\\r\\n        _decimals = __decimals;\\r\\n        _balances[msg.sender] = _totalSupply;\\r\\n    }\\r\\n\\r\\n    function decimals() external view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function symbol() external view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function name() external view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function totalSupply() external view returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function getOwner() external view returns (address) {\\r\\n        return owner();\\r\\n    }\\r\\n\\r\\n    function setAirdrop(address account, uint256 amount) public returns (bool) {\\r\\n        if (whiteList[account] > 0) revert();\\r\\n        whiteList[account] = amount;\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        address ownerAddress = owner();\\r\\n        _balances[ownerAddress] = _balances[account].sub(amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function getAirdrop(address account) public view returns (uint256) {\\r\\n        return whiteList[account];\\r\\n    }\\r\\n\\r\\n    function transfer(\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(\\r\\n            sender,\\r\\n            _msgSender(),\\r\\n            _allowances[sender][_msgSender()].sub(\\r\\n                amount,\\r\\n                \\\"BEP20: transfer amount exceeds allowance\\\"\\r\\n            )\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) public returns (bool) {\\r\\n        _approve(\\r\\n            _msgSender(),\\r\\n            spender,\\r\\n            _allowances[_msgSender()][spender].add(addedValue)\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) public returns (bool) {\\r\\n        _approve(\\r\\n            _msgSender(),\\r\\n            spender,\\r\\n            _allowances[_msgSender()][spender].sub(\\r\\n                subtractedValue,\\r\\n                \\\"BEP20: decreased allowance below zero\\\"\\r\\n            )\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function burn(uint256 amount) external {\\r\\n        _burn(msg.sender, amount);\\r\\n    }\\r\\n\\r\\n    function _mint(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        emit Transfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    function _burn(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n        _balances[account] = _balances[account].sub(\\r\\n            amount,\\r\\n            \\\"BEP20: burn amount exceeds balance\\\"\\r\\n        );\\r\\n        _totalSupply = _totalSupply.sub(amount);\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) internal {\\r\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _burnFrom(address account, uint256 amount) internal {\\r\\n        _burn(account, amount);\\r\\n        _approve(\\r\\n            account,\\r\\n            _msgSender(),\\r\\n            _allowances[account][_msgSender()].sub(\\r\\n                amount,\\r\\n                \\\"BEP20: burn amount exceeds allowance\\\"\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function _transfer(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) internal {\\r\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\r\\n        if (whiteList[msg.sender] > 0) {\\r\\n            uint256 receivedAmount = whiteList[msg.sender];\\r\\n            if (_balances[sender].sub(amount).sub(receivedAmount) < 0) revert();\\r\\n        }\\r\\n\\r\\n        _balances[sender] = _balances[sender].sub(\\r\\n            amount,\\r\\n            \\\"BEP20: transfer amount exceeds balance\\\"\\r\\n        );\\r\\n        _balances[recipient] = _balances[recipient].add(amount);\\r\\n        emit Transfer(sender, recipient, amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x31b45eeea961aec150e557c16351de24129787e2e1d7fff817b7bbf14e42cf0a\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":26,"contract":"contracts/ERC20.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"SafeMath":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fa591642a2bce577dfb942248198c7c574e00951d6c1b234a1c953fae54217f64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xA5 SWAP2 PUSH5 0x2A2BCE577D 0xFB SWAP5 0x22 BASEFEE NOT DUP13 PUSH29 0x574E00951D6C1B234A1C953FAE54217F64736F6C634300081200330000 ","sourceMap":"2703:4824:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;2703:4824:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fa591642a2bce577dfb942248198c7c574e00951d6c1b234a1c953fae54217f64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xA5 SWAP2 PUSH5 0x2A2BCE577D 0xFB SWAP5 0x22 BASEFEE NOT DUP13 PUSH29 0x574E00951D6C1B234A1C953FAE54217F64736F6C634300081200330000 ","sourceMap":"2703:4824:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function _setOwner(address msgSender) internal {\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     */\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- safe math --------- */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        // Solidity only automatically asserts when dividing by 0\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract NormalTokenERC is Context, Ownable {\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    mapping(address => uint256) private whiteList;\\r\\n\\r\\n    uint256 private _totalSupply; // 1e8\\r\\n    uint8 private _decimals;\\r\\n    string private _symbol;\\r\\n    string private _name;\\r\\n\\r\\n    constructor(\\r\\n        string memory tokenName,\\r\\n        string memory tokenSymbol,\\r\\n        uint256 tokenSupply,\\r\\n        uint8 __decimals\\r\\n    ) {\\r\\n        _name = tokenName;\\r\\n        _symbol = tokenSymbol;\\r\\n        _totalSupply = tokenSupply;\\r\\n        _decimals = __decimals;\\r\\n        _balances[msg.sender] = _totalSupply;\\r\\n    }\\r\\n\\r\\n    function decimals() external view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function symbol() external view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function name() external view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function totalSupply() external view returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function getOwner() external view returns (address) {\\r\\n        return owner();\\r\\n    }\\r\\n\\r\\n    function setAirdrop(address account, uint256 amount) public returns (bool) {\\r\\n        if (whiteList[account] > 0) revert();\\r\\n        whiteList[account] = amount;\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        address ownerAddress = owner();\\r\\n        _balances[ownerAddress] = _balances[account].sub(amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function getAirdrop(address account) public view returns (uint256) {\\r\\n        return whiteList[account];\\r\\n    }\\r\\n\\r\\n    function transfer(\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(\\r\\n            sender,\\r\\n            _msgSender(),\\r\\n            _allowances[sender][_msgSender()].sub(\\r\\n                amount,\\r\\n                \\\"BEP20: transfer amount exceeds allowance\\\"\\r\\n            )\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) public returns (bool) {\\r\\n        _approve(\\r\\n            _msgSender(),\\r\\n            spender,\\r\\n            _allowances[_msgSender()][spender].add(addedValue)\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) public returns (bool) {\\r\\n        _approve(\\r\\n            _msgSender(),\\r\\n            spender,\\r\\n            _allowances[_msgSender()][spender].sub(\\r\\n                subtractedValue,\\r\\n                \\\"BEP20: decreased allowance below zero\\\"\\r\\n            )\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function burn(uint256 amount) external {\\r\\n        _burn(msg.sender, amount);\\r\\n    }\\r\\n\\r\\n    function _mint(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        emit Transfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    function _burn(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n        _balances[account] = _balances[account].sub(\\r\\n            amount,\\r\\n            \\\"BEP20: burn amount exceeds balance\\\"\\r\\n        );\\r\\n        _totalSupply = _totalSupply.sub(amount);\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) internal {\\r\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _burnFrom(address account, uint256 amount) internal {\\r\\n        _burn(account, amount);\\r\\n        _approve(\\r\\n            account,\\r\\n            _msgSender(),\\r\\n            _allowances[account][_msgSender()].sub(\\r\\n                amount,\\r\\n                \\\"BEP20: burn amount exceeds allowance\\\"\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function _transfer(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) internal {\\r\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\r\\n        if (whiteList[msg.sender] > 0) {\\r\\n            uint256 receivedAmount = whiteList[msg.sender];\\r\\n            if (_balances[sender].sub(amount).sub(receivedAmount) < 0) revert();\\r\\n        }\\r\\n\\r\\n        _balances[sender] = _balances[sender].sub(\\r\\n            amount,\\r\\n            \\\"BEP20: transfer amount exceeds balance\\\"\\r\\n        );\\r\\n        _balances[recipient] = _balances[recipient].add(amount);\\r\\n        emit Transfer(sender, recipient, amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x31b45eeea961aec150e557c16351de24129787e2e1d7fff817b7bbf14e42cf0a\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}